FORMAT: 1A
HOST: https://api-preprod.invimmo.fr/api/v1/[ReferenceClient]

# API Invimmo

A remplir


## Affectation Locataires au bail [/bail/{refBailInterneOuExterne}/locataires{?type_reference}]

+ Parameters
    + refBailInterneOuExterne: `15689` (required, string) - Référence bail interne ou externe du locataire.
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste d affectation Locataires au bail [POST]

Insère une liste d'affectation locataires au bail dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationLocataire POST])

+ Response 201 (application/json)
    Dans le cas ou les insertions d'affectation locataire se passent bien.
    + Attributes (array[AffectationLocataire Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste d affectation Locataires au bail [PUT]

Modifie une liste d'affectation locataires au bail dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationLocataire PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications d'affectation locataire se passent bien.
    + Attributes (array[AffectationLocataire Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste d affectation Locataires au bail [DELETE]

Désactive une liste d'affectation locataire au bail dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationLocataire DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivations d'affectation locataire se passent bien.
    + Attributes (array[AffectationLocataire Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Affectation Utilisateurs au patrimoine [/utilisateurs/{refUtilisateurInterneOuExterne}/patrimoines]

+ Parameters
    + refUtilisateurInterneOuExterne: `16548` (required, number) - Référence interne ou externe utilisateur.
    
### Ajouter une liste d Affectation utilisateurs au patrimoine [POST]

Insère une liste d’Affectation utilisateurs dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationUtilisateurs POST])

+ Response 201 (application/json)
    Dans le cas ou les insertions de liste d'Affectation Utilisateurs se passent bien.
    + Attributes (array[AffectationUtilisateurs Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une affectation utilisateurs.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Supprimer une liste d Affectation Utilisateurs au patrimoine [DELETE]

Supprime une liste d'Affectation Utilisateurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationUtilisateurs DELETE])

+ Response 200 (application/json)
    Dans le cas ou les suppressions de liste d'Affectation Utilisateurs se passent bien.
    + Attributes (array[AffectationUtilisateurs Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une affectation utilisateurs.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Authentification [/auth]

### Récupérer un token d'authentification [POST]

S"authentifier à l'application

+ Request (application/json)

    + Attributes (Authentification POST)

+ Response 200 (application/json)
    Dans le cas ou l'authentification se passe bien.
    + Attributes (Authentification Invimmo POST)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Les informations fournies ne permettent pas la connexion à l'api.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Barèmes [/baremes]

Table Optionnel

### Ajouter une liste de Barèmes [POST]

Insère une liste de Barèmes dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baremes POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions des barèmes se passent bien.
    + Attributes (array[Baremes Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un barème.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de barèmes [PUT]

Modifie une liste de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baremes PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de barèmes se passent bien.
    + Attributes (array[Baremes Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un barème.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactive une liste de barèmes [DELETE]

Désactive une liste de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baremes DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivation de barèmes se passent bien.
    + Attributes (array[Baremes Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un barème.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Baux [/baux]

Renseigner au préalable un patrimoine

### Ajouter une liste de Baux [POST]

Insère une liste des baux dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux POST])

+ Response 201 (application/json)
    Dans le cas ou les insertions de baux se passent bien.
    + Attributes (array[Baux Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un bail.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Baux [PUT]

Modifie une liste de baux dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de baux se passent bien.
    + Attributes (array[Baux Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un bail.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Baux [DELETE]

Désactive une liste de baux dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivation de baux se passent bien.
    + Attributes (array[Baux Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un bail.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body
    
## Document bail [/baux/{id}/{typeAttachement}/{nomFichier}?TYPE_REFERENCE={TypeReference}]

Ajoute le document du bail dont la référence a été passée en paramètre

+ Parameters
    + id: `1` (required, string) - Référence interne ou externe du bail auquel il faut ajouter le document à retourner.
    + typeAttachement: `PdfBaux` (required, string) - Type d'attachement.
    + nomFichier: `BAI_PAT545_BAIL854.pdf` (required, string) - Nom du fichier.
    + TypeReference: `INTERNE` (required, string) - valeur possibles : INTERNE ou EXTERNE, EXTERNE par défaut si non spécifié.

### Ajouter un document à signer [POST]

Ajoute un document à signer avec un état des lieux pour un bail donné

+ Request (application/json)

    + Headers
    
            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 200 (application/json)
    Dans le cas ou l'ajout d'un document se passe bien
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un document.
    + Body
    
+ Response 404 (application/json)
    (Not found) L'identifiant du bail donné ne correspond à aucun bail dans Invimmo.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Compteurs [/patrimoines/{RefPatrimoineInterneOuExterne}/compteurs]

Table Optionnel

+ Parameters
    + RefPatrimoineInterneOuExterne: `001.001.001A` (string) - Référence interne ou externe du patrimoine. 
    

### Ajouter une liste de compteurs [POST]

Insère une liste de compteurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Compteurs POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions de compteurs se passent bien.
    + Attributes (array[Compteurs Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de compteurs [PUT]

Modifie une liste de compteurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[compteurs PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de compteurs se passent bien.
    + Attributes (array[compteurs Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Supprime une liste de compteurs [DELETE]

Supprime une liste de compteurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[compteurs DELETE])

+ Response 200 (application/json)
    Dans le cas ou les suppressions de compteurs se passent bien.
    + Attributes (array[compteurs Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Excompteurs [/patrimoines/{RefPatrimoineInterneOuExterne}/Baux/{RefBailInterneOuExterne}/excompteurs]

Table Optionnel

+ Parameters
    + RefPatrimoineInterneOuExterne: `001.001.001A` (string) - Référence interne ou externe du patrimoine. 
    + RefBailInterneOuExterne: `001.001.001A` (string) - Référence interne ou externe du bail. 
    

### Ajouter une liste de excompteurs [POST]

Insère une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Excompteurs POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de excompteurs [PUT]

Modifie une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Excompteurs PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Supprime une liste de excompteurs [DELETE]

Supprime une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[excompteurs DELETE])

+ Response 200 (application/json)
    Dans le cas ou les suppressions de excompteurs se passent bien.
    + Attributes (array[excompteurs Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Etats des lieux [/edls/{date}/]

Liste d’états des lieux pour la date donnée

+ Parameters
    + date: `2017-05-26` (required, string) - date format YYYY-MM-DD.

### Récupère l état des lieux avec son contenu [GET]

Récupération de l’intégralité d’un état des lieux avec son contenu.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Edls GET])


+ Response 200 (application/json)
    Dans le cas ou la récupération des etats des lieux se passent bien.
    + Attributes (array[Edls Invimmo GET])
    
+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un état des lieux.
    + Body

+ Response 404 (application/json)
    (Not Found) : Le point de terminaison n’existe pas.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body
    

## Etats des lieux [/edls?TYPE_REFERENCE={TypeReference}&ID={Reference}]

Retourne l'Etat des lieux dont la référence a été passée en paramètre

+ Parameters
    + TypeReference: `INTERNE` (required, string) - valeur possibles : INTERNE ou EXTERNE, EXTERNE par défaut si non spécifié.
    + Reference: `1` (required, string) - Référence interne ou externe de l'edl à retourner.

### Récupère l état des lieux avec son contenu [POST]

Récupération de l’intégralité d’un état des lieux avec son contenu.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    Dans le cas ou la récupération des etats des lieux se passent bien.
    + Attributes (array[Edls Invimmo GET])
    
+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un état des lieux.
    + Body

+ Response 404 (application/json)
    (Not Found) : Le point de terminaison n’existe pas.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body
    
## Etats des lieux [/edls/{id}/{typeAttachement}/{nomFichier}]

Récupère le document signé lié à l'état des lieux dont la référence a été passée en paramètre

+ Parameters
    + id: `1` (required, string) - Référence interne de l'état des lieux duquel il faut récupérer le document.
    + typeAttachement: `PdfBaux` (required, string) - Type d'attachement à récupérer.
    + nomFichier: `BAI_PAT545_BAIL854.pdf` (required, string) - Nom du fichier.
    + TypeReference: `INTERNE` (required, string) - valeur possibles : INTERNE ou EXTERNE, EXTERNE par défaut si non spécifié.

### Récupère le contenu d'un document d'état des lieux [GET]

Récupération d'un document signé d'un état des lieux

+ Request (application/json)

    + Headers
    
            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 200 (application/octet-stream)
    Dans le cas ou la récupération d'un document se passe bien
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un document.
    + Body
    
+ Response 404 (application/json)
    (Not found) L'identifiant de l'état des lieux donné ne correspond à aucun état des lieux dans Invimmo.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Index [/baux/{RefBailInterneOuExterne}/index]

Table Optionnel

+ Parameters
    + RefBailInterneOuExterne: `80125` (required, string) - Référence interne ou externe du bail.

### Ajouter une liste d%27index [POST]

Modification des relevés d’index pour un bail, en complétant les données précisées ci-dessous.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Index POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions d’index se passent bien.
    + Attributes (array[Index Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un Index.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste d`index [PUT]

Modifie une liste d'Index dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Index PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications d'Index se passent bien.
    + Attributes (array[Index Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un Index.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Supprime une liste d'index [DELETE]

Supprime une liste d'Index dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Index DELETE])

+ Response 200 (application/json)
    Dans le cas ou les suppressions d'Index se passent bien.
    + Attributes (array[Index Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un Index.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Ligne de Barèmes [/baremes/{RefBaremeInterneOuExterne}/LigneBaremes]

Table Optionnel

+ Parameters
    + RefBaremeInterneOuExterne: `PLOMB1` (required, string) - Référence interne ou externe du barème.

### Ajouter une liste de ligne de Barèmes [POST]

Insère une liste de ligne de Barèmes dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[LigneBaremes POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions des lignes de barèmes se passent bien.
    + Attributes (array[LigneBaremes Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une ligne de Barèmes.
    + Body
    
+ Response 404 (application/json)
    (Not Found) : Le barème n’existe pas.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de ligne de barèmes [PUT]

Modifie une liste de ligne de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[LigneBaremes PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de ligne de barèmes se passent bien.
    + Attributes (array[LigneBaremes Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une ligne de Barèmes.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactive une liste de ligne de barèmes [DELETE]

Désactive une liste de ligne de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[LigneBaremes DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivation de ligne de barèmes se passent bien.
    + Attributes (array[LigneBaremes Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une ligne de Barèmes.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Locataires [/locataires]

### Ajouter une liste de Locataires [POST]

Insère une liste de locataires dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire POST])

+ Response 201 (application/json)
    Dans le cas ou les insertions de Locataires se passent bien.
    + Attributes (array[Locataire Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une liste de Locataires.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Locataires [PUT]

Modifie une liste de locataires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de Locataires se passent bien.
    + Attributes (array[Locataire Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une liste de Locataires.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Locataires [DELETE]

Désactive une liste de locataire dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivations de Locataires se passent bien.
    + Attributes (array[Locataire Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une liste de Locataires.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Patrimoine [/patrimoines]

### Ajouter une liste de patrimoine [POST]

Insère une liste de patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions de patrimoine se passent bien.
    + Attributes (array[Patrimoine Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de patrimoine [PUT]

Modifie une liste de patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de patrimoine se passent bien.
    + Attributes (array[Patrimoine Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de patrimoine [DELETE]

Désactive une liste de patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivations de patrimoine se passent bien.
    + Attributes (array[Patrimoine Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Groupe Patrimoine [/groupePatrimoines]

### Ajouter une liste de groupes patrimoine [POST]

Insère une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de groupes patrimoine [PUT]

Modifie une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de groupes patrimoine [DELETE]

Désactive une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivations de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Planifications [/planifications]

Table Optionnel

### Ajouter une liste de planifications [POST]

Insère une liste de Planifications dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Planification POST])


+ Response 201 (application/json)
    Dans le cas ou les insertions des Planifications se passent bien.
    + Attributes (array[Planification Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une planification.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de planifications [PUT]

Modifie une liste de Planifications dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Planification PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de Planifications se passent bien.
    + Attributes (array[Planification Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une planification.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body



## Propriétaires [/proprietaires]

Table Optionnel

### Ajouter une liste de Propriétaires [POST]

Insère une liste de propriétaires dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires POST])

+ Response 201 (application/json)
    Dans le cas ou les insertions de Proprietaires se passent bien.
    + Attributes (array[Proprietaires Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Propriétaires [PUT]

Modifie une liste de Propriétaires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications de Proprietaires se passent bien.
    + Attributes (array[Proprietaires Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Propriétaires [DELETE]

Désactive une liste de Propriétaires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivations de Propriétaires se passent bien.
    + Attributes (array[Proprietaires Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Utilisateurs [/utilisateurs]

### Ajouter une liste d utilisateurs [POST]

Insère une liste d’utilisateurs dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Utilisateurs POST])

+ Response 201 (application/json)
    Dans le cas ou les insertions d'Utilisateurs se passent bien.
    + Attributes (array[Utilisateurs Invimmo POST])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste d Utilisateurs [PUT]

Modifie une liste d'Utilisateurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Utilisateurs PUT])

+ Response 200 (application/json)
    Dans le cas ou les modifications d'Utilisateurs se passent bien.
    + Attributes (array[Utilisateurs Invimmo PUT])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste d Utilisateurs [DELETE]

Désactive une liste d'Utilisateurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Utilisateurs DELETE])

+ Response 200 (application/json)
    Dans le cas ou les désactivations d'Utilisateurs se passent bien.
    + Attributes (array[Utilisateurs Invimmo DELETE])
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


# Data Structures

## Authentification POST (object)

- CodeUtilisateur: `BDurand` (required, string) - Code utilisateur (Max 100 caractères).
- MotDePasse: `Se021R}[molFT` (required, string) - Mot de passe (Max 100 caractères).

## Authentification Invimmo POST (object)

- Access_Token: `0a86a11f-d06e-46b7-a133-5240cb27d1e5` (required, string) - Token d'accès à Invimmo


## Patrimoine POST (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).
- CodePatrimoine: `001.001.001A` (required, string) - Code Patrimoine (Max 40 caractères).
- LibelleAdresse: `12 Rue des Bleuets, Appartement 1` (required, string) - Adresse (Max 100 caractères).
- Ville: `MELUN` (required, string) - Ville (Max 100 caractères).
- CodePostal: `77000` (required, string) - Code Postal (Max 10 caractères).
- DateMiseEnService: `1999-12-28` (string) - Date de mise en service du patrimoine (YYYY-MM-DD).
- DateLocation: `2000-02-14` (string) - Date de première location du patrimoine (YYYY-MM-DD).
- NumEtage: `3` (string) - Numéro d'étage du patrimoine (Max 3 caractères).
- NumImmeuble: `105` (string) - Numéro de l'immeuble du patrimoine (Max 10 caractères).
- NomResidence: `Les bleuets` (string) - Nom de la résidence du patrimoine (Max 40 caractères).
- Agence: `MELUN` (string) - Nom de l'agence à laquelle est attaché le patrimoine (Max 500 caractères).
- ReferenceExterneProprietaire: `MONHABITAT` (string) - Référence externe du propriétaire du patrimoine (Max 255 caractères).
- TypeLibelle : `T3` (string) - Libelle du type de patrimoine (Max 50 caractères).
- GroupeUgLibelle : `Groupe 1` (string) - Libelle du groupe UG du patrimoine (Max 200 caractères).

## Patrimoine Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Patrimoine POST

## Patrimoine PUT (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).
- CodePatrimoine: `001.001.001A` (string) - Code Patrimoine (Max 40 caractères).
- LibelleAdresse: `12 Rue des Bleuets, Appartement 1` (string) - Adresse (Max 100 caractères).
- Ville: `MELUN` (string) - Ville (Max 100 caractères).
- CodePostal: `77000` (string) - Code Postal (Max 10 caractères).
- DateMiseEnService: `1999-12-28` (string) - Date de mise en service du patrimoine (YYYY-MM-DD).
- DateLocation: `2000-02-14` (string) - Date de première location du patrimoine (YYYY-MM-DD).
- NumEtage: `3` (string) - Numéro d'étage du patrimoine (Max 3 caractères).
- NumImmeuble: `105` (string) - Numéro de l'immeuble du patrimoine (Max 10 caractères).
- NomResidence: `Les bleuets` (string) - Nom de la résidence du patrimoine (Max 40 caractères).
- Agence: `MELUN` (string) - Nom de l'agence à laquelle est attaché le patrimoine (Max 500 caractères).
- ReferenceExterneProprietaire: `MONHABITAT` (string) - Référence externe du propriétaire du patrimoine (Max 255 caractères).
- TypeLibelle : `T3` (string) - Libelle du type de patrimoine (Max 50 caractères).
- GroupeUgLibelle : `Groupe 1` (string) - Libelle du groupe UG du patrimoine (Max 200 caractères).

## Patrimoine Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Patrimoine PUT

## Patrimoine DELETE (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).

## Patrimoine Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Patrimoine DELETE

## Planification POST (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe de la planification (Max 255 caractères).
- ReferenceExterneBail: `002.002.002A` (string) - Référence externe du bail (Max 255 caractères).
- ReferenceExterneUtilisateur: `003.003.003A` (string) - Référence externe de l'utilisateur (Max 255 caractères).
- Agence: `Paris` (string) - l'agence concernée par la planification (Max 200 caractères).
- DateHeure: `2000-10-14 10:10:10` (string) - Date et heure de la planification (YYYY-MM-DD HH:MM:SS).
- TypeEdl: `1` (number) - le type de l'EDL (1, 2..).

## Planification Invimmo POST (object)

- Include Planification POST

## Planification PUT (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe de la planification (Max 255 caractères).
- ReferenceExterneBail: `002.002.002A` (required, string) - Référence externe du bail (Max 255 caractères).
- ReferenceExterneUtilisateur: `003.003.003A` (required, string) - Référence externe de l'utilisateur (Max 255 caractères).
- Agence: `Paris` (required, string) - l'agence concernée par la planification (Max 200 caractères).
- DateHeure: `2000-10-14 10:10:10` (required, string) - Date et heure de la planification (YYYY-MM-DD HH:MM:SS).
- TypeEdl: `1` (required, number) - le type de l'EDL (1, 2..).

## Planification Invimmo PUT (object)

- Include Planification PUT
## Baux POST (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du bail (Max 255 caractères).
- ReferenceExternePatrimoine: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).
- LibelleAdresse: `12 Rue des Bleuets, Appartement 1` (required, string) - Adresse (Max 100 caractères).
- Ville: `MELUN` (required, string) - Ville (Max 100 caractères).
- CodePostal: `77000` (required, string) - Code Postal (Max 10 caractères).
- DateDebutBail: `2010-12-28` (required, string) - Date de début de bail (YYYY-MM-DD).
- DateFinBail: `2017-02-14` (string) - Date de fin de bail (YYYY-MM-DD).
- DateDepotPreavis: `2017-02-14` (string) - Date de dépot de garantie de bail (YYYY-MM-DD).
- DepotGarantie: `345.20` (number) - montant de dépot de garantie (decimal, 12.2).
- SoldeBail: `-10.54` (number) - Solde du bail (decimal, 12.2).
- EstBailPrincipal: `true` (boolean) - Bail principal true/false.
- DateRetourLD: `2017-02-14` (string) - Date de retour Lettre D (YYYY-MM-DD).
- EtatBail: `O` (string) - Etat du Bail (O)ccupé, (V)acant (Max 50 caractères).
- BailAssocie: `50425` (number) - Numéro du bail associé (number 10).
- CautionsBail: `10.54` (number) - Solde du bail (decimal, 10.2).

## Baux Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baux POST

## Baux PUT (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du bail (Max 255 caractères).
- ReferenceExternePatrimoine: `001.001.001A` (string) - Référence externe du patrimoine (Max 255 caractères).
- LibelleAdresse: `12 Rue des Bleuets, Appartement 1` (string) - Adresse (Max 100 caractères).
- Ville: `MELUN` (string) - Ville (Max 100 caractères).
- CodePostal: `77000` (string) - Code Postal (Max 10 caractères).
- DateDebutBail: `2010-12-28` (string) - Date de début de bail (YYYY-MM-DD).
- DateFinBail: `2017-02-14` (string) - Date de fin de bail (YYYY-MM-DD).
- DateDepotPreavis: `2017-02-14` (string) - Date de dépot de garantie de bail (YYYY-MM-DD).
- DepotGarantie: `345.20` (number) - montant de dépot de garantie (decimal, 12.2).
- SoldeBail: `-10.54` (number) - Solde du bail (decimal, 12.2).
- EstBailPrincipal: `true` (boolean) - Bail principal true/false.
- DateRetourLD: `2017-02-14` (string) - Date de retour Lettre D (YYYY-MM-DD).
- EtatBail: `O` (string) - Etat du Bail (O)ccupé, (V)acant (Max 50 caractères).
- BailAssocie: `50425` (number) - Numéro du bail associé (number 10).
- CautionsBail: `10.54` (number) - Solde du bail (decimal, 10.2).

## Baux Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Baux PUT

## Baux DELETE (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du bail (Max 255 caractères).
- ReferenceExternePatrimoine: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).

## Baux Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baux DELETE


## Locataire POST (object)

- ReferenceExterne: `100254` (required, string) - Référence externe du locataire (Max 255 caractères).
- Nom: `DUPOND` (required, string) - Nom du locataire (Max 50 caractères).
- Prenom: `Gérard` (required, string) - Prénom du locataire (Max 50 caractères).
- Civilite: `Monsieur` (string) - Civilité du locataire (Max 10 caractères).
- Telephone: `03.20.44.44.44` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `gerard.dupond@mondomaine.fr` (string) - Email (Max 255 caractères).

## Locataire Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Locataire POST

## Locataire PUT (object)

- ReferenceExterne: `100254` (required, string) - Référence externe du locataire (Max 255 caractères).
- Nom: `DUPOND` (string) - Nom du locataire (Max 50 caractères).
- Prenom: `Gérard` (string) - Prénom du locataire (Max 50 caractères).
- Civilite: `Monsieur` (string) - Civilité du locataire (Max 10 caractères).
- Telephone: `03.20.44.44.44` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `gerard.dupond@mondomaine.fr` (string) - Email (Max 255 caractères).

## Locataire Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Locataire PUT

## Locataire DELETE (object)

- ReferenceExterne: `100254` (required, string) - Référence externe du locataire (Max 255 caractères).

## Locataire Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Locataire DELETE


## AffectationLocataire POST (object)

- ReferenceExterne: `80125` (required, string) - Référence externe de l'affectation locataire (Max 255 caractères).
- TypeLocataire: `true` (boolean) - Type locataire true/false.

## AffectationLocataire Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include AffectationLocataire POST

## AffectationLocataire PUT (object)

- ReferenceExterne: `80125` (required, string) - Référence externe de l'affectation locataire (Max 255 caractères).
- TypeLocataire: `true` (boolean) - Type locataire true/false.

## AffectationLocataire Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include AffectationLocataire PUT

## AffectationLocataire DELETE (object)

- ReferenceExterne: `80125` (required, string) - Référence externe de l'affectation locataire (Max 255 caractères).

## AffectationLocataire Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include AffectationLocataire DELETE


## GroupePatrimoine POST (object)

- ReferenceExterne: `80125` (required, string) - Référence externe de l'affectation locataire (Max 255 caractères).
- ReferenceExterneBareme: `grp1` (string) - Référence externe du baréme (Max 255 caractères).
- Libelle: `groupe 1` (string) - Libelle du groupe patrimoine  (Max 200 caractères).

## GroupePatrimoine Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include GroupePatrimoine POST

## GroupePatrimoine PUT (object)

- ReferenceExterne: `grp1` (required, string) - Référence externe de l'affectation locataire (Max 255 caractères).
- Libelle: `groupe 1` (string) - Libelle du groupe patrimoine  (Max 200 caractères).

## GroupePatrimoine Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include GroupePatrimoine PUT

## GroupePatrimoine DELETE (object)

- ReferenceExterne: `grp1` (required, string) - Référence externe de l'affectation locataire (Max 255 caractères).

## GroupePatrimoine Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include GroupePatrimoine DELETE


## Utilisateurs POST (object)

- NomUtilisateur: `Durand` (required, string) - Nom de l'utilisateur (Max 50 caractères).
- CodeUtilisateur: `RDurand` (required, string) - Code utilisateur (Max 50 caractères).
- ReferenceExterne: `RDurand` (required, string) - Référence externe du Bail (Max 255 caractères).
- Motdepasse: `RDurand` (required, string) - Mot de passe utilisateur (Max 255 caractères).
- Prenom: `Robert` (string) - Prénom utilisateur (Max 50 caractères).
- ImeiMobile: `351557010202731` (string) - Code IMEI du mobile (Max 100 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `351557010202731` (string) - Email (Max 255 caractères).

## Utilisateurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Utilisateurs POST

## Utilisateurs PUT (object)

- CodeUtilisateur: `RDurand` (required, string) - Code utilisateur (Max 50 caractères).
- NomUtilisateur: `Durand` (string) - Nom de l'utilisateur (Max 50 caractères).
- Prenom: `Robert` (string) - Prénom utilisateur (Max 50 caractères).
- Motdepasse: `RDurand` (string) - Mot de passe utilisateur (Max 255 caractères).
- ImeiMobile: `351557010202731` (string) - Code IMEI du mobile (Max 100 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `351557010202731` (string) - Email (Max 255 caractères).

## Utilisateurs Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Utilisateurs PUT

## Utilisateurs DELETE (object)

- CodeUtilisateur: `RDurand` (required, string) - Code utilisateur (Max 50 caractères).

## Utilisateurs Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Utilisateurs DELETE


## AffectationUtilisateurs POST (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe de l'Affectation Utilisateurs (Max 255 caractères).

## AffectationUtilisateurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include AffectationUtilisateurs POST

## AffectationUtilisateurs DELETE (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe de l'Affectation Utilisateurs (Max 255 caractères).

## AffectationUtilisateurs Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include AffectationUtilisateurs DELETE


## Proprietaires POST (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du Propriétaire (Max 255 caractères).
- Nom: `Durand` (required, string) - Nom du Propriétaire (Max 50 caractères).
- Prenom: `Robert` (required, string) - Prénom du Propriétaire (Max 50 caractères).
- Civilite: `Monsieur` (string) - Civilité du Propriétaire (Max 10 caractères).
- Adresse: `12 Rue des Bleuets, Appartement 1` (string) - Adresse (Max 100 caractères).
- CodePostal: `77000` (string) - Code Postal (Max 10 caractères).
- Ville: `MELUN` (string) - Ville (Max 100 caractères).
- Email: `351557010202731` (string) - Email (Max 255 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 20 caractères).
- Pays: `FRANCE` (string) - Pays (Max 50 caractères).

## Proprietaires Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Proprietaires POST

## Proprietaires PUT (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du Propriétaire (Max 255 caractères).
- Nom: `Durand` (string) - Nom de l'utilisateur (Max 50 caractères).
- Prenom: `Robert` (string) - Prénom utilisateur (Max 50 caractères).
- Civilite: `Monsieur` (string) - Civilité du locataire (Max 10 caractères).
- Adresse: `12 Rue des Bleuets, Appartement 1` (string) - Adresse (Max 100 caractères).
- CodePostal: `77000` (string) - Code Postal (Max 10 caractères).
- Ville: `MELUN` (string) - Ville (Max 100 caractères).
- Email: `351557010202731` (string) - Email (Max 255 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 20 caractères).
- Pays: `FRANCE` (string) - Pays (Max 50 caractères).

## Proprietaires Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Proprietaires PUT

## Proprietaires DELETE (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du propriétaire (Max 255 caractères).

## Proprietaires Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Proprietaires DELETE


## Compteurs POST (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- CodeConstructeur: `T016701` (required, string) - Code Compteur (Max 200 caractères).
- TypeCompteur: `Electrique` (required, string) - Type de compteur (Eau, eletricité, etc...) (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Informations complémentaires (Max 200 caractères).
- Tarif: `0.52` (number) - Tarif Compteur (e.g. prix kw/h) (Double 10.2).

## Compteurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Compteurs POST

## Compteurs PUT (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- CodeConstructeur: `T016701` (string) - Code Compteur (Max 200 caractères).
- TypeCompteur: `Electrique` (string) - Type de compteur (Eau, eletricité, etc...) (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Code Postal (Max 200 caractères).
- Tarif: `0.52` (number) - Tarif Compteur (e.g. prix kw/h) (Double 10.2).

## Compteurs Invimmo PUT (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo.
- Include Compteurs PUT

## Compteurs DELETE (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).

## Compteurs Invimmo DELETE (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo
- Include Compteurs DELETE

## Excompteurs POST (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- CodeConstructeur: `T016701` (required, string) - Code Compteur (Max 200 caractères).
- TypeCompteur: `Electrique` (required, string) - Type de compteur (Eau, eletricité, etc...) (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Informations complémentaires (Max 200 caractères).
- TarifEc: `0.52` (number) - Tarif EC Compteur (e.g. prix kw/h) (Double 10.2).
- TarifEf: `0.55` (number) - Tarif EF Compteur (e.g. prix kw/h) (Double 10.2).
- IndexDebut: `55` (number) - Index de début du bail.

## Excompteurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Excompteurs POST

## Excompteurs PUT (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- CodeConstructeur: `T016701` (string) - Code Compteur (Max 200 caractères).
- TypeCompteur: `Electrique` (string) - Type de compteur (Eau, eletricité, etc...) (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Code Postal (Max 200 caractères).
- TarifEc: `0.52` (number) - Tarif EC Compteur (e.g. prix kw/h) (Double 10.2).
- TarifEf: `0.55` (number) - Tarif EF Compteur (e.g. prix kw/h) (Double 10.2).
- IndexDebut: `55` (number) - Index de début du bail.

## Excompteurs Invimmo PUT (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo.
- Include Excompteurs PUT

## Excompteurs DELETE (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).

## Excompteurs Invimmo DELETE (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo
- Include Excompteurs DELETE
## Index POST (object)

- ReferenceExterne: `4568` (required, string) - Référence externe de l'Index (Max 255 caractères).
- ReferenceExterneCompteur: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- Releve: `1235` (required, number) - relevé de l'index (Max 10).
- DateReleve: `2017-02-14` (string) - Date de relevé de l'index (YYYY-MM-DD).
- Incident: `true` (boolean) - Relevé suite à incident (changement de compteur / fuite / etc.) true/false.
- Commentaire: `Index estimatif` (string) - Commentaire (Max 500 caractères).

## Index Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Index POST

## Index PUT (object)

- ReferenceExterne: `4568` (required, string) - Référence externe de l'Index (Max 255 caractères).
- ReferenceExterneCompteur: `001.230E` (string) - Référence externe du Compteur (Max 255 caractères).
- Releve: `1235` (number) - relevé de l'index (Max 10).
- DateReleve: `2017-02-14` (string) - Date de relevé de l'index (YYYY-MM-DD).
- Incident: `true` (boolean) - Relevé suite à incident (changement de compteur / fuite / etc.) true/false.
- Commentaire: `Index estimatif` (string) - Commentaire (Max 500 caractères).

## Index Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Index PUT

## Index DELETE (object)

- ReferenceExterne: `4568` (required, string) - Référence externe de l'Index (Max 255 caractères).

## Index Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Index DELETE


## Baremes POST (object)

- ReferenceExterne: `PLOMB1` (required, string) - Référence externe du Barème (Max 255 caractères).
- Libelle: `Plomberie` (required, string) - Libellé du barème (Max 200 caractères).

## Baremes Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baremes POST

## Baremes PUT (object)

- ReferenceExterne: `PLOMB1` (required, string) - Référence externe du Barème (Max 255 caractères).
- Libelle: `001.230E` (string) - Libellé du barème (Max 200 caractères).

## Baremes Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Baremes PUT

## Baremes DELETE (object)

- ReferenceExterne: `PLOMB1` (required, string) - Référence externe du Barème (Max 255 caractères).

## Baremes Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baremes DELETE


## LigneBaremes POST (object)

- ReferenceExterne: `7895` (required, string) - Référence externe de la ligne de Barème (Max 255 caractères).
- IdTypeEquipement: `45` (required, number) - L'identifiant du type d'équipement venant du paramètrage d'invimmo (Integer 10).
- Forfait: `450` (required, number) - Montant forfaitaire 0 = Non, 1 = Oui (Integer 1).
- Designation: `Evier Inox` (required, string) - Désignation de la ligne de barème (Max 255 caractères).
- CodeLigneBareme: `Evier Inox` (string) - Code de le ligne de Barème (Max 500 caractères).
- Franchise: `500` (number) - Franchise appliqué sur le ligne de Barème (Interger 4).
- VetusteResiduelle: `500` (number) - Franchise appliqué sur le ligne de Barème (double, 12.2).
- Devis: `300` (number) - Montant Devisé de ligne de Barème (integer, 3).
- Unite: `Evier Inox` (string) - Unité de la ligne de Barème (Max 5 caractères).
- PrixHT: `500` (number) - Prix Hors Taxe de ligne de Barème (double, 12.2).
- PrixTTC: `500` (number) - Prix toutes Taxes comprises de ligne de Barème (double, 12.2).

## LigneBaremes Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include LigneBaremes POST

## LigneBaremes PUT (object)

- ReferenceExterne: `7895` (required, string) - Référence externe de la ligne de Barème (Max 255 caractères).
- IdTypeEquipement: `45` (number) - L'identifiant du type d'équipement venant du paramètrage d'invimmo (Integer 10).
- Forfait: `450` (number) - Montant forfaitaire 0 = Non, 1 = Oui (Integer 1).
- Designation: `Evier Inox` (string) - Désignation de la ligne de barème (Max 255 caractères).
- CodeLigneBareme: `Evier Inox` (string) - Code de le ligne de Barème (Max 500 caractères).
- Franchise: `500` (number) - Franchise appliqué sur le ligne de Barème (Interger 4).
- VetusteResiduelle: `500` (number) - Franchise appliqué sur le ligne de Barème (double, 12.2).
- Devis: `300` (number) - Montant Devisé de ligne de Barème (integer, 3).
- Unite: `Evier Inox` (string) - Unité de la ligne de Barème (Max 5 caractères).
- PrixHT: `500` (number) - Prix Hors Taxe de ligne de Barème (double, 12.2).
- PrixTTC: `500` (number) - Prix toutes Taxes comprises de ligne de Barème (double, 12.2).

## LigneBaremes Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include LigneBaremes PUT

## LigneBaremes DELETE (object)

- ReferenceExterne: `7895` (required, string) - Référence externe de la ligne de Barème (Max 255 caractères).

## LigneBaremes Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include LigneBaremes DELETE


## Edls GET (object)

- Assurance (Assurances GET)
- Pieces (array[Pieces GET])
- Locataires (array[Locataires GET])
- Compteurs (array[Compteurs GET])
- Travaux (Travaux GET)
- Reponses (array[Reponses GET])

- ReferenceInvimmo: `149` (required, number) - Référence unique Invimmo.
- DateEdl: `2016-10-03 14:44:36` (required, string) - Date de l'état des lieux (YYYY-MM-DD HH:MM:SS).
- DateEntrant: `2016-10-03` (required, string) - Date d'entré du locataire (YYYY-MM-DD).
- Commentaire: `Logement très propre` (required, string) - Commentaire de l'état des lieux.
- CommentaireMotifDeDepart: `Cherche un logement centre ville`  (required, string) - Commentaire du motif de départ.
- ReferenceInvimmoLogement: `16548` (required, number) - Référence unique Invimmo.
- ReferenceExterneLogement: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).
- referenceExterneBail: `80125` (required, string) - Référence externe du bail (Max 255 caractères).
- referenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo.
- ReferenceInvimmoProprietaire: `16548` (required, number) - Référence unique Invimmo.
- ReferenceExterneProprietaire: `RDurand` (required, string) - Référence externe du Propriétaire (Max 255 caractères).
- TypeLogement: `T2` (required, string) - Type du logement.
- TypeEdl: `Etat des lieux entrant` (required, string) - Type de l'état des lieux.
- Etat: `Clos` (required, string) - Etat de l'état des lieux.
- MotifDepart: `Logement centre ville` (required, string) - Motif de départ du locataire.
- DestinationClient: `Centre ville de MELIN` (required, string) - Destination du locataire partant.
- LienEditionEdl: `http://localhost:8180/Attachements/Invimmo/TREO/EditionEDL/5/11_edl__EditionEDL.pdf`
- LienEditionDegradation: `http://localhost:8180/Attachements/Invimmo/TREO/EditionReparation/5/11_edl__EditionEDL.pdf`

## Edls Invimmo GET (object)

## Reponses GET (object)

- Question: `EDL est terminé?` (string) - Libelle de la question (Max 2000 caractères).
- ReferenceInvimmoQuestion: `16548` (required, number) - Référence unique Invimmo.
- Reponse: `true` (boolean) - Réponse à la question (oui -> true, non > false).

## Assurances GET (object)

- ReferenceInvimmo: `465` (required, number) - Référence interne de l'assurance (Integer 10).
- DateDebut: `2016-01-31` (string) - Date de début (YYYY-MM-DD).
- DateFin: `2017-01-31` (string) - Date de fin (YYYY-MM-DD).
- NomCompagnie: `AXA` (required, string) - Nom de la compagnie d'assurance (Max 50 caractères).
- CodeContrat: `ZS45EMI4442` (required, string) - Code contrat d'assurance (Max 50 caractères).
- NumeroAssure: `Robert DUPOND` (required, string) - Numéro de l'assuré (Max 50 caractères).
- TelCompagnie: `351557010202731` (string) - Numéro de téléphone (Max 17 caractères).
- MailCompagnie: `toto@compagnie.fr` (string) - Email (Max 255 caractères).

## Pieces GET (object)

- equipements (array[Equipements GET])
- Surface (Surface GET)

- ReferenceInvimmo: `465` (required, number) - Référence interne de la Pièce (Integer 10).
- ReferenceExterne: `CUI123` (required, string) - Référence externe de la pièce (Max 255 caractères).
- Nom: `SALON` (required, string) - Nom de la pièce (Max 200 caractères).
- Etat: `HS` (string) - Etat de la pièce (type état) (Max 100 caractères).
- Ordre: `10` (number) - longueur de la pièce (number(3)).


## Surface GET (object)

- Surface: `110.67` (number) - surface de la pièce (Double 10.2).
- Hauteur: `2.5` (number) - hauteur de la pièce (Double 10.2).
- Largeur: `10.52` (number) - largeur de la pièce (Double 10.2).
- Longueur: `10.52` (number) - longueur de la pièce (Double 10.2).
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.

## Equipements GET (object)

- ReferenceInvimmo: `45` (required, number) - Référence interne de l'équipement (Integer 10).
- ReferenceExterne: `EDH123` (required, string) - Référence externe de l'équipement  (Max 255 caractères).
- Nom: `Evier Inox` (required, string) - Désignation de l'équipement (Max 200 caractères).
- DatePose: `2017-02-14` (string) - Date de pose de l'équipement (YYYY-MM-DD).
- Etat: `Bon` (required, string) - Etat de l'équipement (Max 100 caractères).
- Commentaire: `Evier Inox double` (required, string) - Désignation de l'équipement (Max 2000 caractères).
- Ordre: `10` (number) - longueur de  l'équipement (number(3)).

## Procuration GET (object)

- Nom: `Dupont` (string) - Nom de la personne ayant procuration (Max 50 caractères).
- Prenom: `Dupont` (string) - Prenom de la personne ayant procuration (Max 50 caractères).
- Adresse: `rue de lille` (string) - Adresse de la personne ayant procuration (Max 100 caractères).
- ComplementAdresse: `Appt 2` (string) - Adresse de la personne ayant procuration (Max 100 caractères).
- CodePostal: `59000` (string) - Code postal de la personne ayant procuration (Max 10 caractères).
- Ville: `Lille` (string) - Ville de la personne ayant procuration (Max 100 caractères).
- Pays: `France` (string) - Pays de la personne ayant procuration (Max 50 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 20 caractères).
- Email: `toto@gmail.com` (string) - Email (Max 255 caractères).

## FutureAdresse GET (object)

- Adresse: `rue de lille` (string) - Adresse de la future adresse (Max 100 caractères).
- ComplementAdresse: `Appt 2` (string) - Adresse de la future adresse (Max 100 caractères).
- CodePostal: `59000` (string) - Code postal de la future adresse (Max 10 caractères).
- Ville: `Lille` (string) - Ville de la future adresse (Max 100 caractères).
- Pays: `France` (string) - Pays de la future adresse (Max 50 caractères).
- TelephonePortable: `351557010202731` (string) - Numéro de téléphone portable(Max 20 caractères).
- TelephoneFixe: `351557010202731` (string) - Numéro de téléphone fixe (Max 20 caractères).
- Email: `toto@gmail.com` (string) - Email (Max 255 caractères).
- ReferenceInvimmoLocataire: `16548` (number) - Référence unique Invimmo du locataire.
- ReferenceExterneLocataire: `RDUPOND` (string) - Référence externe du locataire (Max 255 caractères).

## Locataires GET (object)

- ReferenceInvimmo: `465` (required, number) - Référence interne du locataire (Integer 10).
- ReferenceExterne: `RDUPOND` (required, string) - Référence externe du locataire si requete edl (Max 255 caractères).
- Nom: `DUPOND` (required, string) - Nom du locataire si requete edl (Max 50 caractères).
- Prenom: `Robert` (required, string) - Prenom du locataire si requete edl (Max 50 caractères).
- Civilite: `M` (required, string) - Civilité du locataire si requete edl (Max 10 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `toto@gmail.com` (string) - Email (Max 255 caractères).
- absent: `true` (boolean) - Absent lors de l'état des lieux true/false.
- refuseDeSigner: `true` (boolean) - Refuse de signer l'état des lieux true/false.

- Procuration (Procuration GET)
- FutureAdresse (FutureAdresse GET)

## Compteurs GET (object)

- ReferenceExterne: `001.230E` (string) - Référence externe du Compteur (Max 255 caractères).
- ReferenceInvimmo: `465` (required, number) - Référence interne du Compteur (Integer 10).
- CodeConstructeur: `T016701` (required, string) - Code Compteur (Max 200 caractères).
- CodeTypeCompteur: `ELEC` (required, string) - Code de Type de compteur (Max 500 caractères).
- libelleTypeCompteur: `Compteur Electrique` (required, string)  (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Code Postal (Max 200 caractères).
- Tarif: `0.52` (number) - Tarif Compteur (e.g. prix kw/h) (Double 10.2).

- index (array[Index GET])

## Index GET (object)

- ReferenceInvimmo: `465` (required, number) - Référence interne de l'index (Integer 10).
- ReferenceExterne: `001.230E` (string) - Référence externe de l'index (Max 255 caractères).
- DateReleve: `2017-02-14` (string) - Date de relevé de l'index (YYYY-MM-DD).
- Incident: `true` (boolean) - Relevé suite à incident (changement de compteur / fuite / etc.) true/false.
- Releve: `0` (number) - Relevé (Integer 1).
- ReferenceInvimmoCompteur: `44589` (number) - ID du compteur(Integer 10).
- ReferenceInvimmoCompteur: `001.230E` (string) - Référence externe du compteur (Max 255 caractères).
- ReferenceInvimmoBail: `44589` (number) - ID du bail (Integer 10).
- ReferenceExterneBail: `001.230E` (string) - Référence externe du bail (Max 255 caractères).
- Type: `Début` (string) - Type de relevé (Max 20 caractères).
- Commentaire: `Pas de commentaire` (string) - Commentaire sur l'index (Max 500 caractères).

## Travaux GET (object)

- CoutTotalDegradations: `500.45` (number) - Cout total des dégradations (double, 12.2).
- PourcentageRemise: `500.45` (number) - Pourcentage de la remise (double, 12.2).
- MontantApresRemise: `500.45` (number) - Cout total des dégradations après remise (double, 12.2).
- MontantRameneA: `500.45` (number) - Cout total des dégradations ramené au montant de... (double, 12.2).
- ConstatHuissier: `O` (string) - Y-a-t-il un constat d'huissier? O/N.

- degradations (array[Degradations GET])

## Degradations GET (object)

- Designation: `Evier Inox` (required, string) - Désignation de la dégradation (Max 255 caractères).
- PrixUnitaire: `10.40` (number) - Prix unitaire (Double 10.2).
- Quantite: `2` (number) - Quantité (Double 10.2).
- CoutTotal: `18.30` (number) - Cout total (Double 10.2).
- Vetuste: `2.10` (number) - Vétusté (Double 10.2).
- Forfait: `true` (boolean) - Est au forfait true/false.
- AChargeDuBailleur: `true` (boolean) - Réparation à la charge du bailleur true/false.
- ReferenceInvimmoEquipement: `45` (required, number) - Référence interne de l'équipement (Integer 10).
- ReferenceExterneEquipement: `CON125` (string) - Référence externe du type d'équipement (Max 255 caractères).
- RubriqueAssocie: `Contremarche` (string) - Rubrique associée (type équipement) (Max 200 caractères).
- CodeBordereau: `Evier Inox` (string) - Code bordereau (Max 500 caractères).