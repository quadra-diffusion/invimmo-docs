FORMAT: 1A
HOST: https://api-preprod.invimmo.fr/api/v1/[ReferenceClient]

# API Invimmo

A remplir

## Gestion documents [/attachements/{type}/{reference}/{filename}]

+ Parameters
    + type: `DocumentConstat` (required, string) - Type de document (DocumentConstat ou DocumentEquipement).
    + reference: `EDLS` (required,string) - Code du parent du document (Code type tache ou code type equipement).
    + filename: `notice.pdf` (required,string) - Nom du fichier.

### Ajouter un document [POST]

Ajout d'un document dans Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 201 (application/json)
    Dans le cas ou tout se passe bien.
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Suppriner un document [DELETE]

Suppression d'un document dans Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 201 (application/json)
    Dans le cas ou tout se passe bien.
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Affectation Locataires au bail [/bail/{refBailInterneOuExterne}/locataires?TYPE_REFERENCE={type_reference}]

+ Parameters
    + refBailInterneOuExterne: `15689` (required, string) - Référence bail interne ou externe.
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste d affectation Locataires au bail [POST]

Insère une liste d'affectation locataires au bail dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationLocataire POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions d'affectation locataire se passent bien.
    + Attributes (array[AffectationLocataire Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste d affectation Locataires au bail [PUT]

Modifie une liste d'affectation locataires au bail dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationLocataire PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications d'affectation locataire se passent bien.
    + Attributes (array[AffectationLocataire Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste d affectation Locataires au bail [DELETE]

Désactive une liste d'affectation locataire au bail dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationLocataire DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations d'affectation locataire se passent bien.
    + Attributes (array[AffectationLocataire Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un locataire.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Récupérer une liste d affectation Locataires au bail [GET]

Récupère une liste d'affectation locataire au bail dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[LocataireBail GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Affectation Patrimoines à l'utilisateur [/utilisateurs/{refUtilisateurInterneOuExterne}/patrimoines?TYPE_REFERENCE={type_reference}]

+ Parameters
    + refUtilisateurInterneOuExterne: `16548` (required, number) - Référence interne ou externe utilisateur.
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    
### Ajouter une liste d Affectation [POST]

Insère une liste d’Affectation dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationUtilisateurs POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions de liste d'Affectation Utilisateurs se passent bien.
    + Attributes (array[AffectationUtilisateurs Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une affectation utilisateurs.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Supprimer une liste d Affectation [DELETE]

Supprime une liste d'Affectation dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[AffectationUtilisateurs DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les suppressions de liste d'Affectation Utilisateurs se passent bien.
    + Attributes (array[AffectationUtilisateurs Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une affectation utilisateurs.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Récupérer une liste d affectation [GET]

Récupère une liste d'affectation dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Patrimoine Invimmo GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Authentification [/auth]

### Récupérer un token d'authentification [POST]

S"authentifier à l'application

+ Request (application/json)

    + Attributes (Authentification POST,fixed-type)

+ Response 200 (application/json)
    Dans le cas ou l'authentification se passe bien.
    + Attributes (Authentification Invimmo POST)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Les informations fournies ne permettent pas la connexion à l'api.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Barèmes [/baremes?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.


### Ajouter une liste de Barèmes [POST]

Insère une liste de Barèmes dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baremes POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions des barèmes se passent bien.
    + Attributes (array[Baremes Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un barème.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de barèmes [PUT]

Modifie une liste de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baremes PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de barèmes se passent bien.
    + Attributes (array[Baremes Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un barème.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactive une liste de barèmes [DELETE]

Désactive une liste de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baremes DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivation de barèmes se passent bien.
    + Attributes (array[Baremes Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un barème.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Barèmes [/baremes/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un barème [GET]

Récupère un barème

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Baremes Invimmo GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Baux [/baux?TYPE_REFERENCE={type_reference}&FORCE_MAJ={force_maj}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + force_maj: `OUI` (optional,string) - Dans le cas d'une modification force une mise à jour de tout les champs a la valeur renseignee. Par default NON.

### Ajouter une liste de Baux [POST]

Insère une liste des baux dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions de baux se passent bien.
    + Attributes (array[Baux Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un bail.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Baux [PUT]

Modifie une liste de baux dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de baux se passent bien.
    + Attributes (array[Baux Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un bail.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Baux [DELETE]

Désactive une liste de baux dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivation de baux se passent bien.
    + Attributes (array[Baux Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un bail.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Reactivation Baux [/baux-reactivation?TYPE_REFERENCE={type_reference}]
+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Réactive une liste de baux [PUT]

Réactive une liste de baux dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Baux Reactivation],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les réactivations se passent bien.
    + Attributes (array[Baux Invimmo Reactivation], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Baux [/baux/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un bail [GET]

Récupère un bail

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Baux GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Baux [/baux/{id}/{document}?TYPE_REFERENCE={type_reference}&MATCH_PARTIEL={match_partiel}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.
    + match_partiel: `NON` (optional, string) - Recherche le bail sur uniquement le début de la référence externe. Par defaut NON.
    + document: `dernierEdl` (required, string) - Nom du document (dernierEdl ou dernieresReparations).

### Récupérer le dernier document d'état des lieux d'un bail [GET]

Récupére le dernier document d'état des lieux d'un bail

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/octet-stream)
    Le document pdf
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body
    
+ Response 404 (application/json)
    (Not found) Aucun document n'a été trouvé.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Document bail [/baux/{id}/PdfsASigner/{nomFichier}?TYPE_REFERENCE={TypeReference}]

Gestion documents du bail dont la référence a été passée en paramètre

+ Parameters
    + id: `1` (required, string) - Référence interne ou externe du bail auquel il faut ajouter le document à retourner.
    + nomFichier: `BAI_PAT545_BAIL854.pdf` (required, string) - Nom du fichier.
    + TypeReference: `INTERNE` (optional, string) - valeur possibles : INTERNE ou EXTERNE, EXTERNE par défaut si non spécifié.

### Ajouter un document à signer [POST]

Ajoute un document à signer avec un état des lieux pour un bail donné

+ Request (application/json)

    + Headers
    
            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 200 (application/json)
    Dans le cas ou l'ajout d'un document se passe bien
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un document.
    + Body
    
+ Response 404 (application/json)
    (Not found) L'identifiant du bail donné ne correspond à aucun bail dans Invimmo.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body
    
### Supprime un document à signer [DELETE]

Suppriime un document à signer avec un état des lieux pour un bail donné

+ Request (application/json)

    + Headers
    
            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 200 (application/json)
    Dans le cas ou l'ajout d'un document se passe bien
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un document.
    + Body
    
+ Response 404 (application/json)
    (Not found) L'identifiant du bail donné ne correspond à aucun bail dans Invimmo.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Excompteurs [/patrimoines/{RefPatrimoineInterneOuExterne}/Baux/{RefBailInterneOuExterne}/excompteurs/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un Excompteur [GET]

Récupère un Excompteur

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Excompteurs GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Excompteurs du bail [/patrimoines/{RefPatrimoineInterneOuExterne}/Baux/{RefBailInterneOuExterne}/excompteurs?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + RefPatrimoineInterneOuExterne: `001.001.001A` (string) - Référence interne ou externe du patrimoine. 
    + RefBailInterneOuExterne: `001.001.001A` (string) - Référence interne ou externe du bail. 
    

### Ajouter une liste de excompteurs du bail [POST]

Insère une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[ExcompteursBail POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de excompteurs du bail [PUT]

Modifie une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[ExcompteursBail PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Desactive une liste de excompteurs du bail [DELETE]

Desactive une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Excompteurs DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les suppressions de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Ajout en masse de Excompteurs [/excompteurs?TYPE_REFERENCE={type_reference}&FORCE_PARAMETRAGE={force_parametrage}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + force_parametrage: `Oui` (optional,string) - Indique si la création de paramétrage doit se faire automatiquement
    

### Ajouter une liste de excompteurs [POST]

Insère une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Excompteurs POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de excompteurs [PUT]

Modifie une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Excompteurs PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Desactive une liste de excompteurs [DELETE]

Desactive une liste de compteurs externes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Excompteurs DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les suppressions de excompteurs se passent bien.
    + Attributes (array[Excompteurs Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un compteur.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


## Etats des lieux [/edls/{date}/avecDocumentsSynchronises]

Liste d’états des lieux pour la date donnée

+ Parameters
    + date: `2017-05-26` (required, string) - date format YYYY-MM-DD.

### Récupère la liste des états des lieux [GET]

Récupération de la liste des identifiants des états des lieux de la date

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    Dans le cas ou la récupération des etats des lieux se passent bien.
    + Attributes
    
+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 404 (application/json)
    (Not Found) : Le point de terminaison n’existe pas.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body
   
 
## Etats des lieux [/edls/{dateDebut}/{dateFin}/avecDocumentsSynchronises]

Liste d’états des lieux pour la plages de dates donnée

+ Parameters
    + dateDebut: `2017-05-26` (required, string) - date Debut YYYY-MM-DD.
    + dateFin: `2017-05-27` (required, string) - date Fin format YYYY-MM-DD incluse.

### Récupère la liste des états des lieux [GET]

Récupération de la liste des identifiants des états des lieux dans une page de dates donnée

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    Dans le cas ou la récupération des etats des lieux se passent bien.
    + Attributes
    
+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 404 (application/json)
    (Not Found) : Le point de terminaison n’existe pas.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body
    

## Etats des lieux [/edls?TYPE_REFERENCE={TypeReference}&ID={Reference}]

Retourne l'Etat des lieux dont la référence a été passée en paramètre

+ Parameters
    + TypeReference: `INTERNE` (optional,string) - valeur possibles : INTERNE ou EXTERNE, EXTERNE par défaut si non spécifié.
    + Reference: `1` (required, string) - Référence interne ou externe de l'edl à retourner.

### Récupère l état des lieux avec son contenu [GET]

Récupération de l’intégralité d’un état des lieux avec son contenu.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    Dans le cas ou la récupération des etats des lieux se passent bien.
    + Attributes (Edls GET)
    
+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un état des lieux.
    + Body

+ Response 404 (application/json)
    (Not Found) : Le point de terminaison n’existe pas.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Etats des lieux [/edls/{id}/{typeAttachement}/{nomFichier}]

Récupère un des documents signé lié à l'état des lieux dont la référence a été passée en paramètre

+ Parameters
    + id: `1` (required, string) - Référence interne de l'état des lieux duquel il faut récupérer le document.
    + typeAttachement: `EditionEDL` (required, string) - Type d'attachement à récupérer (se trouve entre le double "__" et l'extension du fichier EditionEDL ou EditionReparation.
    + nomFichier: `5_edl__EditionEDL.pdf` (required, string) - Nom du fichier se trouvant dans le contenu d'un état des lieux.

### Récupère le contenu d'un document d'état des lieux [GET]

Récupération d'un document signé d'un état des lieux

+ Request (application/json)

    + Headers
    
            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

+ Response 200 (application/octet-stream)
    Dans le cas ou la récupération d'un document se passe bien
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un document.
    + Body
    
+ Response 404 (application/json)
    (Not found) L'identifiant de l'état des lieux donné ne correspond à aucun état des lieux dans Invimmo.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Récupération d'un document [/{token}/attachements/{typeAttachement}/{reference}/{nomFichier}]

Récupère un document, les informations se trouvent dans les objets "photos" dans le retour d'un état des lieux

+ Parameters
    + token: `1` (required, string) - Token d'authentification encodé en base64
    + typeAttachement: `Degradations` (required, string) - Type d'attachement à récupérer.
    + reference: `1` (required, string) - Référence du document.
    + nomFichier: `5_edl__EditionEDL.pdf` (required, string) - Nom du fichier.

### Récupère un document [GET]

Récupération d'un document

+ Request (application/json)

+ Response 200 (application/octet-stream)
    Dans le cas ou la récupération d'un document se passe bien
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un document.
    + Body
    
+ Response 404 (application/json)
    (Not found) Le document n'existent pas
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Index [/baux/{RefBailInterneOuExterne}/index?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + RefBailInterneOuExterne: `80125` (required, string) - Référence interne ou externe du bail.

### Ajouter une liste d%27index [POST]

Modification des relevés d’index pour un bail, en complétant les données précisées ci-dessous.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Index POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions d’index se passent bien.
    + Attributes (array[Index POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un Index.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste d`index [PUT]

Modifie une liste d'Index dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Index PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications d'Index se passent bien.
    + Attributes (array[Index Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un Index.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Supprime une liste d'index [DELETE]

Supprime une liste d'Index dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Index DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les suppressions d'Index se passent bien.
    + Attributes (array[Index Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un Index.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Ligne de Barèmes [/baremes/{RefBaremeInterneOuExterne}/LigneBaremes/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Récupérer une Ligne de Barème [GET]

Récupère une Ligne de Barème

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[LigneBaremes GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Ligne de Barèmes [/baremes/{RefBaremeInterneOuExterne}/LigneBaremes?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + RefBaremeInterneOuExterne: `PLOMB1` (required, string) - Référence interne ou externe du barème.

### Ajouter une liste de ligne de Barèmes [POST]

Insère une liste de ligne de Barèmes dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[LigneBaremes POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions des lignes de barèmes se passent bien.
    + Attributes (array[LigneBaremes Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une ligne de Barèmes.
    + Body
    
+ Response 404 (application/json)
    (Not Found) : Le barème n’existe pas.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de ligne de barèmes [PUT]

Modifie une liste de ligne de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[LigneBaremes PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de ligne de barèmes se passent bien.
    + Attributes (array[LigneBaremes Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une ligne de Barèmes.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactive une liste de ligne de barèmes [DELETE]

Désactive une liste de ligne de barèmes dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[LigneBaremes DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivation de ligne de barèmes se passent bien.
    + Attributes (array[LigneBaremes Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une ligne de Barèmes.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Récupérer les Lignes d'un Barème [GET]

Récupère les Lignes d'un Barème

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[LigneBaremes GET], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Locataires [/locataires/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un Locataire [GET]

Récupère un Locataire

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Locataire GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Locataires [/locataires?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste de Locataires [POST]

Insère une liste de locataires dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions de Locataires se passent bien.
    + Attributes (array[Locataire Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une liste de Locataires.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Locataires [PUT]

Modifie une liste de locataires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de Locataires se passent bien.
    + Attributes (array[Locataire Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une liste de Locataires.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Locataires [DELETE]

Désactive une liste de locataire dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations de Locataires se passent bien.
    + Attributes (array[Locataire Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une liste de Locataires.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Reactivation Locataires [/locataires-reactivation?TYPE_REFERENCE={type_reference}]
+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Réactive une liste de locataires [PUT]

Réactive une liste de locataires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Locataire Reactivation],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les réactivations se passent bien.
    + Attributes (array[Locataire Invimmo Reactivation], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Remarques patrimoine [/patrimoines/{id}/remarques]

+ Parameters
    + id: `1` (required, string) - Référence externe du patrimoine.

### Modifier les remarques du patrimoine [PUT]

Modifie les remarques du patrimoine

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[RemarquePatrimoine],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les modifications des remarques se passent bien.
    + Attributes (array[RemarquePatrimoine], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Patrimoine [/patrimoines/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un Patrimoine [GET]

Récupère un Patrimoine

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Patrimoine GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Patrimoine [/patrimoines?TYPE_REFERENCE={type_reference}&FORCE_PARAMETRAGE={force_parametrage}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + force_parametrage: `Oui` (optional,string) - Force la création du paramétrage si inexistant

### Ajouter une liste de patrimoine [POST]

Insère une liste de patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions de patrimoine se passent bien.
    + Attributes (array[Patrimoine Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de patrimoine [PUT]

Modifie une liste de patrimoines dans la base de données d’Invimmo, si une structure existe déja celle-ci remplacera l'existante

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de patrimoine se passent bien.
    + Attributes (array[Patrimoine Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de patrimoine [DELETE]

Désactive une liste de patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations de patrimoine se passent bien.
    + Attributes (array[Patrimoine Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Reactivation Patrimoine [/patrimoines-reactivation?TYPE_REFERENCE={type_reference}]
+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Réactive une liste de patrimoine [PUT]

Réactive une liste de patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Patrimoine Reactivation],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les réactivations se passent bien.
    + Attributes (array[Patrimoine Invimmo Reactivation], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Groupe Patrimoine [/groupeUgs/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un Groupe Patrimoine [GET]

Récupère un Groupe Patrimoine

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[GroupePatrimoine GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Groupe Patrimoine [/groupeUgs?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste de groupes patrimoine [POST]

Insère une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de groupes patrimoine [PUT]

Modifie une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de groupes patrimoine [DELETE]

Désactive une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Reactivation groupes patrimoines [/groupeUgs-reactivation?TYPE_REFERENCE={type_reference}]
+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Réactiver une liste de groupes patrimoine [DELETE]

Réactive une liste de groupes patrimoines dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[GroupePatrimoine Reactivation],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les réactivations de groupe patrimoine se passent bien.
    + Attributes (array[GroupePatrimoine Invimmo Reactivation], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un groupe patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Liste des Planifications [/planifications-liste]

### Récupérer une liste de Planifications filtrée [POST]

Récupére une liste de Planifications filtrée

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)
    
    + Attributes (array[PlanificationFiltreeParam],fixed-type)

+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[PlanificationFiltree],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Planifications [/planifications/{id}]

+ Parameters
    + id: `1` (required, string) - Référence externe.

### Récupérer une Planification [GET]

Récupère une Planification

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Planification GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Planifications [/planifications?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste de planifications [POST]

Insère une liste de Planifications dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Planification POST],fixed-type)


+ Response 201 (application/json)
    Dans le cas ou les insertions des Planifications se passent bien.
    + Attributes (array[Planification Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une planification.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de planifications [PUT]

Modifie une liste de Planifications dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Planification PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de Planifications se passent bien.
    + Attributes (array[Planification Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer une planification.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body


### Supprimer une liste de planifications [DELETE]

Supprime une liste de Planifications dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Planification DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les suppressions de Planifications se passent bien.
    + Body
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit de supprimer une planification.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Propriétaires [/proprietaires/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un Propriétaire [GET]

Récupère un Propriétaire

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Proprietaires GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Propriétaires [/proprietaires?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste de Propriétaires [POST]

Insère une liste de propriétaires dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions de Proprietaires se passent bien.
    + Attributes (array[Proprietaires Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Propriétaires [PUT]

Modifie une liste de Propriétaires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications de Proprietaires se passent bien.
    + Attributes (array[Proprietaires Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Propriétaires [DELETE]

Désactive une liste de Propriétaires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations de Propriétaires se passent bien.
    + Attributes (array[Proprietaires Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Reactivation Proprietaires [/proprietaires-reactivation?TYPE_REFERENCE={type_reference}]
+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Réactive une liste de proprietaires [PUT]

Réactive une liste de proprietaires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Proprietaires Reactivation],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les réactivations se passent bien.
    + Attributes (array[Proprietaires Invimmo Reactivation], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Utilisateurs [/utilisateurs?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.

### Ajouter une liste d utilisateurs [POST]

Insère une liste d’utilisateurs dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Utilisateurs POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions d'Utilisateurs se passent bien.
    + Attributes (array[Utilisateurs Invimmo POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste d Utilisateurs [PUT]

Modifie une liste d'Utilisateurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Utilisateurs PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications d'Utilisateurs se passent bien.
    + Attributes (array[Utilisateurs Invimmo PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste d Utilisateurs [DELETE]

Désactive une liste d'Utilisateurs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Utilisateurs DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations d'Utilisateurs se passent bien.
    + Attributes (array[Utilisateurs Invimmo DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Utilisateurs [/utilisateurs/{id}?TYPE_REFERENCE={type_reference}]

+ Parameters
    + type_reference: `interne` (optional,string) - Type de référence (externe ou interne). Par default externe.
    + id: `1` (required, string) - Référence interne ou externe.

### Récupérer un Utilisateur [GET]

Récupère un Utilisateur

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Utilisateurs GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## TypePieces [/TypePieces]

### Ajouter une liste de types pieces [POST]

Insère une liste de types pieces dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypePieces POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions se passent bien.
    + Attributes (array[TypePieces POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de types pieces [PUT]

Modifie une liste de types pieces dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypePieces PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications se passent bien.
    + Attributes (array[TypePieces PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de types pieces [DELETE]

Désactive une liste de types pieces dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypePieces DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations se passent bien.
    + Attributes (array[TypePieces DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Recupération des TypePieces [/TypePieces/liste?ACTIF={actif}]

+ Parameters
    + actif: `true` (boolean) - Actif.

### Récupérer des types pieces [GET]

Récupère des types pieces

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[TypePieces GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## TypeEquipements [/TypeEquipements]

### Ajouter une liste de types equipements [POST]

Insère une liste de types equipements dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeEquipements POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions se passent bien.
    + Attributes (array[TypeEquipements POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de types equipements [PUT]

Modifie une liste de types equipements dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeEquipements PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications se passent bien.
    + Attributes (array[TypeEquipements PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de types equipements [DELETE]

Désactive une liste de types equipements dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeEquipements DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations se passent bien.
    + Attributes (array[TypeEquipements DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Recupération des TypeEquipements [/TypeEquipements/liste?ACTIF={actif}]

+ Parameters
    + actif: `true` (boolean) - Actif.

### Récupérer des types equipements [GET]

Récupère des types equipements

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[TypeEquipements GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## TypeUgs [/TypeUgs]

### Ajouter une liste de types ugs [POST]

Insère une liste de types ugs dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeUgs POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions se passent bien.
    + Attributes (array[TypeUgs POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de types ugs [PUT]

Modifie une liste de types ugs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeUgs PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications se passent bien.
    + Attributes (array[TypeUgs PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de types ugs [DELETE]

Désactive une liste de types ugs dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeUgs DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations se passent bien.
    + Attributes (array[TypeUgs DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Recupération des TypeUgs [/TypeUgs/liste?ACTIF={actif}]

+ Parameters
    + actif: `true` (boolean) - Actif.

### Récupérer des types ugs [GET]

Récupère des types ugs

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[TypeUgs GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## TypeEtages [/TypeEtages]

### Ajouter une liste de types etages [POST]

Insère une liste de types etages dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeEtages POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions se passent bien.
    + Attributes (array[TypeEtages POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de types etages [PUT]

Modifie une liste de types etages dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeEtages PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications se passent bien.
    + Attributes (array[TypeEtages PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de types etages [DELETE]

Désactive une liste de types etages dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[TypeEtages DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations se passent bien.
    + Attributes (array[TypeEtages DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Recupération des TypeEtages [/TypeEtages/liste?ACTIF={actif}]

+ Parameters
    + actif: `true` (boolean) - Actif.

### Récupérer des types etages [GET]

Récupère des types etages

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[TypeEtages GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Recupération des Types de tâche [/TypeEdls/liste?ACTIF={actif}]

+ Parameters
    + actif: `true` (boolean) - Actif.

### Récupérer des types de tâche [GET]

Récupère des types de tâche

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[TypeEdls GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Prestataires [/Prestataires]

### Ajouter une liste de Prestataires [POST]

Insère une liste de Prestataires dans la base de données d’Invimmo.

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Prestataires POST],fixed-type)

+ Response 201 (application/json)
    Dans le cas ou les insertions se passent bien.
    + Attributes (array[Prestataires POST], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Modifier une liste de Prestataires [PUT]

Modifie une liste de Prestataires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Prestataires PUT],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les modifications se passent bien.
    + Attributes (array[Prestataires PUT], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

### Désactiver une liste de Prestataires [DELETE]

Désactive une liste de Prestataires dans la base de données d’Invimmo

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)

    + Attributes (array[Prestataires DELETE],fixed-type)

+ Response 200 (application/json)
    Dans le cas ou les désactivations se passent bien.
    + Attributes (array[Prestataires DELETE], fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant, parce qu’il n’a pas le droit d’insérer un patrimoine.
    + Body

+ Response 409 (application/json)
    (Conflict) La demande n'a pas pu être terminée.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

## Recupération des Prestataires [/Prestataires/liste?ACTIF={actif}]

+ Parameters
    + actif: `true` (boolean) - Actif.

### Récupérer des Prestataires [GET]

Récupère des types Prestataires

+ Request (application/json)

    + Headers

            Authorization: Token d'authentification (exemple `0a86a11f-d06e-46b7-a133-5240cb27d1e5`)


+ Response 200 (application/json)
    La récupération s'est bien passée
    + Attributes (array[Prestataires GET],fixed-type)
    
+ Response 400 (application/json)
    (Bad Request) Tous les cas où un paramètre n'est pas valide, ou un paramètre requis est manquant. Ceci inclut le cas où un ID de ressource est spécifiée de manière incorrecte dans un chemin.
    + Body

+ Response 401 (application/json)
    (Unauthorized) Aucun jeton OAuth n’est fourni. Ou bien le token a expiré.
    + Body

+ Response 403 (application/json)
    (Forbidden) Les informations ne peuvent pas être inséré par l'utilisateur agissant.
    + Body

+ Response 500 (application/json)
    (Internal server error) Le serveur HTTP a rencontré une condition inattendue qui l'a empêché de traiter la requête. Cette erreur peut par exemple être le résultat d'une mauvaise configuration du serveur, ou d'une ressource épuisée ou refusée au serveur sur la machine hôte.
    + Body

# Data Structures

## Authentification POST (object)

- CodeUtilisateur: `BDurand` (required, string) - Code utilisateur (Max 100 caractères).
- MotDePasse: `Se021R}[molFT` (required, string) - Mot de passe (Max 100 caractères).

## Authentification Invimmo POST (object)

- Access_Token: `0a86a11f-d06e-46b7-a133-5240cb27d1e5` (required, string) - Token d'accès à Invimmo

## RemarquePatrimoine (object)
- Objet (string) - Objet de la remarque (Max 500 caractères).
- Remarque (string) - Contenu de la remarque (Max 2000 caractères).
- Date: `1999-12-28` (string) - Date de la remarque (YYYY-MM-DD).

## DocumentPatrimoine (object)
- Nom: `Document descriptif du patrimoine` (required, string) - Nom du document (Max 255 caractères).
- Lien: `http://www.africau.edu/images/default/sample.pdf` (required, string) - Lien du document (Max 500 caractères).
- Extension: `pdf` (required, string) - Extension du fichier (Max 25 caractères).

## Patrimoine (object)
- ReferenceExterne: `001.001.001A` (required, string) - Référence externe du patrimoine unique (Max 255 caractères).
- CodePatrimoine: `001.001.001A` (required, string) - Code Patrimoine unique (Max 40 caractères).
- LibelleAdresse: `12 Rue des Bleuets, Appartement 1` (required, string) - Adresse (Max 100 caractères).
- Ville: `MELUN` (required, string) - Ville (Max 100 caractères).
- CodePostal: `77000` (required, string) - Code Postal (Max 10 caractères).
- DateMiseEnService: `1999-12-28` (string) - Date de mise en service du patrimoine (YYYY-MM-DD).
- DateLocation: `2000-02-14` (string) - Date de première location du patrimoine (YYYY-MM-DD).
- NumEtage: `3` (string) - Numéro d'étage du patrimoine (Max 3 caractères).
- NumImmeuble: `105` (string) - Numéro de l'immeuble du patrimoine (Max 10 caractères).
- NomResidence: `Les bleuets` (string) - Nom de la résidence du patrimoine (Max 40 caractères).
- Agence: `MELUN` (string) - Nom de l'agence à laquelle est attaché le patrimoine (Max 500 caractères).
- ReferenceExterneProprietaire: `MONHABITAT` (string) - Référence externe du propriétaire du patrimoine (Max 255 caractères).
- TypeLibelle : `T3` (string) - Libelle du type de patrimoine (Max 50 caractères).
- GroupeUgLibelle : `Groupe 1` (string) - Libelle du groupe UG du patrimoine (Max 200 caractères).
- DocumentsAssocies (array[DocumentPatrimoine],fixed-type) - documents associés au patrimoine
- Surface: `42.69` (number) - Surface du logement
- Meuble: `true` (boolean) - Logement meuble ou non

## Patrimoine GET (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Patrimoine

## Patrimoine POST (object)
- StructurePatrimoine (EdlsStructure POST) - structure du patrimoine
- RemarquesLogement (array[RemarquePatrimoine], fixed-type) - remarques du patrimoine
- BaremesAssocies (array[string], fixed-type) - Liste de Codes de barèmes a associer si le groupe est inexistant
- Include Patrimoine

## Patrimoine Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Patrimoine POST

## Patrimoine PUT (object)

- Include Patrimoine
- StructurePatrimoine (EdlsStructure POST) - structure du patrimoine
- BaremesAssocies (array[string], fixed-type) - Liste de Codes de barèmes a associer si le groupe est inexistant

## Patrimoine Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Patrimoine PUT

## Patrimoine Invimmo GET (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Patrimoine PUT

## Patrimoine DELETE (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).

## Patrimoine Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Patrimoine DELETE

## Patrimoine Reactivation (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).

## Patrimoine Invimmo Reactivation (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Patrimoine Reactivation

## EdlsStructure POST (object)

- Cles (array[ClefStructure POST],fixed-type)
- Etages (array[EtageStructure POST],fixed-type)
- Pieces (array[PieceStructure POST],fixed-type)
- ReferenceExterne: `axb12` (string) Référence externe

## EtageStructure POST (object)
- Type: `Rez-de-chaussée` (required,string) Type d'étage
- InfoComplementaire: `Principal` (string) Information complémentaire
- ReferenceExterne: `axb12` (string) Référence externe
- Pieces (array[PieceStructure POST],fixed-type)


## ClefStructure POST (object)

- Nom: `Badge` (required,string) Nom du type de clef
- Commentaire (string) Commentaire sur la clef
- InfoComplementaire (string) Information complémentaire sur la clef

## PieceStructure POST (object)
- Equipements (array[EquipementStructure POST],fixed-type)
- Surface (SurfaceStructure POST,fixed-type)
- Type (required,string) Nom du type de pièce
- Etat (string) Etat de la pièce
- ReferenceExterne: `axb12` (string) Référence externe
- InfoComplementaire (string) Information complémentaire sur la pièce

## EquipementStructure POST (object)
- Type: `prise` (required,string) - Nom du type d'équipement
- Etat (string) - Etat de l'équipement
- ReferenceExterne: `axb12` (string) Référence externe
- InfoComplementaire (string) - Information complémentaire sur l'équipement

## SurfaceStructure POST (object)
- Surface (number) - Surface de la pièce
- Hauteur (number) - Surface de la pièce
- Largeur (number) - Largeur de la pièce
- Longueur (number) - Longueur de la pièce

## Planification (object)

- ReferenceExterne: `001.001.001A` (required, string) - Référence externe de la planification (Max 255 caractères).
- ReferenceExterneBail: `002.002.002A` (string) - Référence externe du bail (Max 255 caractères).
- ReferenceExterneLogement: `1.4000.1.2` (string) - Référence externe du logement (Max 255 caractères).
- ReferenceExterneUtilisateur: `003.003.003A` (string) - Référence externe de l'utilisateur (Max 255 caractères).
- Agence: `Paris` (string) - l'agence concernée par la planification (Max 200 caractères).
- DateHeure: `2000-10-14 10:10:10` (string) - Date et heure de la planification (YYYY-MM-DD HH:MM:SS).
- DateHeureFin: `2000-10-14 10:10:10` (string) - Date et heure de fin de la planification (YYYY-MM-DD HH:MM:SS).
- TypeEdl: `1` (number) - le type de l'EDL (1, 2..).
- Commentaire: `` (string) - Commentaire de la planification (Max 2000 caractères).
- EdlADistance: `false` (boolean) - Information sur la réalisation de l'edl à distance
- DateHeureDebutPeriodeLimite: `2000-10-14 10:10:10` (optional, string) - Date de début de la période limite de réalisation
- DateHeureLimite: `2000-10-14 10:10:10` (optional, string) - Date de fin de la période limite de réalisation
- Recurrence: `5` (optional, number) - Récurrence, nombre de fois ou la tache se déroule par mois ou année selon l'unité
- UniteRecurrence: `month` (optional, string) - Unité de la récurrence, month ou year

## Planification References (object)

- Include Planification
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- ReferenceInvimmoUtilisateur: `TEST` (required, string) - Référence unique Invimmo utilisateur
- ReferenceInterneLogement: `16548` (required, number) - Référence unique Invimmo logement
- ReferenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo Bail

## ChargeClientele (object)

- Code: `FLO` (required, string) - Code utilisateur

## EtatTache (object)

- Etat: `2` (required, number) - Etat de la tâche, 2 pour En attente, 3 pour A programmer, 4 pour Planifié, 5 pour Pré-planifié

## TypeTache (object)

- Num: `1` (optional, number) - Numéro type edl (préciser la valeur -42 pour avoir les tâches administratives)
- Libelle: `Etat des lieux sortant` (optional, string) - Nom de la tâche

## PlanificationFiltreeParam (object)

- DatePlanificationDebut: `2020-12-08` (optional, string) - Date de début de la recherche
- DatePlanificationFin: `2020-12-09` (optional, string) - Date de fin de la recherche
- TypesTache (array[TypeTache]) Types de tâches
- EtatsTache (required,array[EtatTache]) Etats des tâches
- ChargeClientele(array[ChargeClientele]) Agents
- Agence: `Lille` (optional, string) - Agence
- CodePatrimoine: `codePatrimoine` (optional, string) - Code patrimoine
- Locataire: `Antoine dupond` (optional, string) - Locataire
- DateHeureDebutPeriodeLimite: `2000-10-14 10:10:10` (optional, string) - Date de début de la période limite de réalisation
- DateHeureLimite: `2000-10-14 10:10:10` (optional, string) - Date de fin de la période limite de réalisation
- QueControles: `false` (boolean) - Indique une recherche sur uniquement des controles

## PlanificationFiltree (object)

- referenceExterneBail: `bailTest` (optional, string) - Reference externe du bail
- codeLogement: `Logement test` (optional, string) - Code du logement
- typeEdl: `Etat des lieux sortant` (required, string) - Nom de la tâche
- nomUtilisateur: `DUPOND` (optional, string) - Nom de l'agent
- prenomUtilisateur: `JEAN` (optional, string) - Prénom de l'agent
- referenceExterneLocataire: `DURAND001` (optional, string) - Reference du locataire
- nomLocataire: `DUPOND` (optional, string) - Nom du locataire
- prenomLocataire: `JEAN` (optional, string) - Prénom du locataire
- referenceInterneBail: `1` (optional, number) - Reference invimmo du bail
- referenceInterneLogement: `1` (optional, number) - Reference invimmo du logement
- referenceInterneTypeEdl: `1` (optional, number) - Reference invimmo de la tâche
- codeUtilisateur: `FLO` (optional, string) - Code de l'agent
- dateDebutPlanification: `2020-12-09T18:00:00.0000000+01:00` (optional, string) - Date de début de la tâche
- dateFinPlanification: `2020-12-09T19:00:00.0000000+01:00` (optional, string) - Date de fin de la tâche
- referenceExternePlanification: `PlanifDUPOND001` (optional, string) - Reference externe de la tâche
- agencePlanification: `Lille` (optional, string) - Agence de la tâche
- adresse: `10 rue des ormes` (optional, string) - Adresse du logement
- codePostal: `59000` (optional, string) - Code postal du logement
- ville: `Lille` (optional, string) - Ville du logement


## Planification GET (object)

- Include Planification References
- TypeEdlLibelle: `Entrant` (required, string) - Type d'état des lieux


## Planification POST (object)

- Include Planification

## Planification Invimmo POST (object)

- Include Planification References

## Planification PUT (object)

- Include Planification

## Planification Invimmo PUT (object)

- Include Planification References

## Planification DELETE (object)

- ReferenceExternePlanification: `001.001.001A` (string) - Référence externe de la planification (Max 255 caractères).
- ReferenceInternePlanification: `1` (number) - Référence interne de la planification (Max 255 caractères).

## Baux (object)

- ReferenceExterne: `80125` (required, string) - Référence externe unique du bail (Max 255 caractères).
- ReferenceExternePatrimoine: `001.001.001A` (required, string) - Référence externe unique du patrimoine (Max 255 caractères).
- LibelleAdresse: `12 Rue des Bleuets, Appartement 1` (required, string) - Adresse (Max 100 caractères).
- Ville: `MELUN` (required, string) - Ville (Max 100 caractères).
- CodePostal: `77000` (required, string) - Code Postal (Max 10 caractères).
- DateDebutBail: `2010-12-28` (required, string) - Date de début de bail (YYYY-MM-DD).
- DateFinBail: `2017-02-14` (string) - Date de fin de bail (YYYY-MM-DD).
- DateDepotPreavis: `2017-02-14` (string) - Date de dépot de garantie de bail (YYYY-MM-DD).
- DepotGarantie: `345.20` (number) - montant de dépot de garantie (decimal, 12.2).
- SoldeBail: `-10.54` (number) - Solde du bail (decimal, 12.2).
- EstBailPrincipal: `true` (boolean) - Bail principal true/false.
- DateRetourLD: `2017-02-14` (string) - Date de retour Lettre D (YYYY-MM-DD).
- EtatBail: `O` (string) - Etat du Bail (O)ccupé, (V)acant (Max 50 caractères).
- BailAssocie: `50425` (number) - Numéro du bail associé (number 10).
- CautionsBail: `10.54` (number) - Solde du bail (decimal, 10.2).

## Baux POST (object)

- Include Baux
- Locataires (array[LocataireBail POST],fixed-type) - Locataires

## Baux GET (object)

- Include Baux
- Patrimoine (Patrimoine Invimmo GET) - Patrimoine
- Locataires (array[Locataire GET],fixed-type) - Locataires
- Assurance (Assurances GET)


## Baux Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baux POST

## Baux PUT (object)

- Include Baux
- Locataires (array[LocataireBail POST],fixed-type) - Locataires, attention la liste fournie remplacera en totalité la liste déja fournie

## Baux Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Baux PUT

## Baux DELETE (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du bail (Max 255 caractères).

## Baux Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baux DELETE

## Baux Reactivation (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du bail (Max 255 caractères).

## Baux Invimmo Reactivation (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baux DELETE

## LocataireBail POST (object)

- Include Locataire POST
- Principal (boolean) - Locataire principal ou non.

## LocataireBail GET (object)

- Include Locataire GET
- LocatairePrincipal (boolean) - Locataire principal ou non.
- ReferenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo du bail
- ReferenceExterneBail: `RDUPOND` (required, string) - Référence externe du bail (Max 255 caractères).

## Locataire (object)

- ReferenceExterne: `100254` (required, string) - Référence externe du locataire (Max 255 caractères).
- Nom: `Durand` (string) - Nom de l'utilisateur ou Type de la personne morale (SCI...) (Max 50 caractères).
- Prenom: `Robert` (string) - Prénom utilisateur ou Nom de la personne morale (SCI...) (Max 50 caractères).
- Civilite: `Monsieur` (string) - Civilité du locataire, renseigner "PM" si personne morale (Max 10 caractères).
- Telephone: `03.20.44.44.44` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `gerard.dupond@mondomaine.fr` (string) - Email (Max 255 caractères).

## Locataire POST (object)

- Include Locataire

## Locataire Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Locataire POST

## Locataire GET (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Locataire POST

## Locataires EDL GET (object)

- Include Locataire
- ReferenceInvimmo: `465` (required, number) - Référence interne du locataire (Integer 10).
- absent: `true` (boolean) - Absent lors de l'état des lieux true/false.
- refuseDeSigner: `true` (boolean) - Refuse de signer l'état des lieux true/false.

- Procuration (Procuration GET)
- FutureAdresse (FutureAdresse GET)

## Locataire PUT (object)

- Include Locataire

## Locataire Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Locataire PUT

## Locataire DELETE (object)

- ReferenceExterne: `100254` (required, string) - Référence externe du locataire (Max 255 caractères).

## Locataire Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Locataire DELETE

## Locataire Reactivation (object)

- ReferenceExterne: `100254` (required, string) - Référence externe du locataire (Max 255 caractères).

## Locataire Invimmo Reactivation (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Locataire Reactivation


## AffectationLocataire POST (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du locataire (Max 255 caractères).
- LocatairePrincipal: `true` (boolean) - Le locataire est t'il principal ou non sur ce bail.

## AffectationLocataire Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo du locataire
- Include AffectationLocataire POST

## AffectationLocataire PUT (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du locataire (Max 255 caractères).
- LocatairePrincipal: `true` (boolean) - Le locataire est t'il principal ou non sur ce bail..

## AffectationLocataire Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo du locataire.
- Include AffectationLocataire PUT

## AffectationLocataire DELETE (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du locataire (Max 255 caractères).

## AffectationLocataire Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo du locataire
- Include AffectationLocataire DELETE

## GroupePatrimoine  (object)

- ReferenceExterne: `80125` (required, string) - Référence externe du groupe patrimoine (Max 255 caractères).
- Libelle: `groupe 1` (string) - Libelle du groupe patrimoine  (Max 200 caractères).
- LogementsActifs (boolean) - Information pour indiquer si le groupe a des logements actifs
- BaremesAssocies (array[Baremes],fixed-type) - Barèmes a associer au groupe

## GroupePatrimoine GET (object)

- Include GroupePatrimoine
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- ReferenceBaremeInvimmo: `16549` (required, number) - Référence unique Invimmo barème

## GroupePatrimoine POST (object)

- Include GroupePatrimoine

## GroupePatrimoine Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include GroupePatrimoine POST

## GroupePatrimoine PUT (object)

- ReferenceExterne: `grp1` (required, string) - Référence externe du groupe patrimoine (Max 255 caractères).
- Libelle: `groupe 1` (string) - Libelle du groupe patrimoine  (Max 200 caractères).

## GroupePatrimoine Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include GroupePatrimoine PUT

## GroupePatrimoine DELETE (object)

- ReferenceExterne: `grp1` (required, string) - Référence externe du groupe patrimoine (Max 255 caractères).

## GroupePatrimoine Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include GroupePatrimoine DELETE

## GroupePatrimoine Reactivation (object)

- ReferenceExterne: `grp1` (required, string) - Référence externe du groupe patrimoine (Max 255 caractères).

## GroupePatrimoine Invimmo Reactivation (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include GroupePatrimoine Reactivation

## Utilisateurs (object)

- NomUtilisateur: `Durand` (required, string) - Nom de l'utilisateur (Max 50 caractères).
- CodeUtilisateur: `RDurand` (required, string) - Code utilisateur (Max 50 caractères).
- ReferenceExterne: `RDurand` (required, string) - Référence externe du Bail (Max 255 caractères).
- MotDePasse: `RDurand` (required, string) - Mot de passe utilisateur (Max 255 caractères).
- Prenom: `Robert` (string) - Prénom utilisateur (Max 50 caractères).
- ImeiMobile: `351557010202731` (string) - Code IMEI du mobile (Max 100 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 17 caractères).
- Email: `351557010202731` (string) - Email (Max 255 caractères).

## Utilisateurs GET (object)

- Include Utilisateurs
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo

## Utilisateurs POST (object)

- Include Utilisateurs

## Utilisateurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Utilisateurs POST

## Utilisateurs PUT (object)

- Include Utilisateurs

## Utilisateurs Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Utilisateurs PUT

## Utilisateurs DELETE (object)

- CodeUtilisateur: `RDurand` (required, string) - Code utilisateur (Max 50 caractères).

## Utilisateurs Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Utilisateurs DELETE


## AffectationUtilisateurs POST (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du patrimoine (Max 255 caractères).

## AffectationUtilisateurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo du patrimoine
- Include AffectationUtilisateurs POST

## AffectationUtilisateurs DELETE (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du patrimoine (Max 255 caractères).

## AffectationUtilisateurs Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo du patrimoine
- Include AffectationUtilisateurs DELETE

## Proprietaires (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du Propriétaire (Max 255 caractères).
- Nom: `Durand` (string) - Nom du propriétaire ou Type de la personne morale (SCI...) (Max 50 caractères).
- Prenom: `Robert` (string) - Prénom propriétaire ou Nom de la personne morale (SCI...) (Max 50 caractères).
- Civilite: `Monsieur` (string) - Civilité du propriétaire, renseigner "PM" si personne morale (Max 10 caractères).
- Adresse: `12 Rue des Bleuets, Appartement 1` (string) - Adresse (Max 100 caractères).
- ComplementAdresse: `Etage 4` (string) - Adresse (Max 100 caractères).
- CodePostal: `77000` (string) - Code Postal (Max 10 caractères).
- Ville: `MELUN` (string) - Ville (Max 100 caractères).
- Email: `351557010202731` (string) - Email (Max 255 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 20 caractères).
- Pays: `FRANCE` (string) - Pays (Max 50 caractères).

## Proprietaires GET (object)

- Include Proprietaires
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo

## Proprietaires POST (object)

- Include Proprietaires

## Proprietaires Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Proprietaires POST

## Proprietaires PUT (object)

- Include Proprietaires

## Proprietaires Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Proprietaires PUT

## Proprietaires DELETE (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du propriétaire (Max 255 caractères).

## Proprietaires Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Proprietaires DELETE

## Proprietaires Reactivation (object)

- ReferenceExterne: `RDurand` (required, string) - Référence externe du propriétaire (Max 255 caractères).

## Proprietaires Invimmo Reactivation (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Proprietaires DELETE

## Compteurs (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- CodeConstructeur: `T016701` (required, string) - Code Compteur (Max 200 caractères).
- CodeTypeCompteur: `ELEC` (required, string) - Code du type de compteur (Eau, eletricité, etc...) (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Informations complémentaires (Max 200 caractères).
- Tarif: `0.52` (number) - Tarif Compteur (e.g. prix kw/h) (Double 10.2).

## Compteurs POST (object)

- Include Compteurs

## Compteurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Compteurs POST

## Compteurs GET (object)

- Include Compteurs
- libelleTypeCompteur: `Compteur Electrique` (required, string)  (Max 500 caractères).
- ReferenceInvimmo: `465` (required, number) - Référence interne du Compteur (Integer 10).


## Compteurs EDL GET (object)

- Include Compteurs GET
- index (array[Index GET],fixed-type)

## Compteurs PUT (object)

- Include Compteurs

## Compteurs Invimmo PUT (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo.
- Include Compteurs PUT

## Compteurs DELETE (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).

## Compteurs Invimmo DELETE (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo
- Include Compteurs DELETE

## Excompteurs (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- CodeConstructeur: `T016701` (required, string) - Code Compteur (Max 200 caractères).
- CodeTypeCompteur: `ELEC` (required, string) - Code du type de compteur (Eau, eletricité, etc...) (Max 500 caractères).
- Emplacement: `Sous l'évier` (string) - Emplacement physique du compteur (Max 100 caractères).
- InformationComplementaire: `Compteur jour/nuit` (string) - Informations complémentaires (Max 200 caractères).
- TarifEc: `0.52` (number) - Tarif EC Compteur (e.g. prix kw/h) (Double 10.2).
- TarifEf: `0.55` (number) - Tarif EF Compteur (e.g. prix kw/h) (Double 10.2).
- IndexDebut: `55` (number) - Index de début du bail.

## Excompteurs GET (object)

- Include Excompteurs
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- ReferenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo bail
- ReferenceInvimmoPatrimoine: `16548` (required, number) - Référence unique Invimmo patrimoine

## Excompteurs POST (object)

- Include Excompteurs
- ReferenceExterneBail: `16548` (required, string) - Reference externe du bail
- ReferenceExternePatrimoine: `16548` (required, string) - Reference externe du patrimoine

## ExcompteursBail POST (object)

- Include Excompteurs

## Excompteurs Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- ReferenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo bail
- ReferenceInvimmoPatrimoine: `16548` (required, number) - Référence unique Invimmo patrimoine
- Include Excompteurs POST

## Excompteurs PUT (object)

- Include Excompteurs
- ReferenceExterneBail: `16548` (required, string) - Reference externe du bail
- ReferenceExternePatrimoine: `16548` (required, string) - Reference externe du patrimoine

## ExcompteursBail PUT (object)

- Include Excompteurs

## Excompteurs Invimmo PUT (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo.
- ReferenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo bail
- ReferenceInvimmoPatrimoine: `16548` (required, number) - Référence unique Invimmo patrimoine
- Include Excompteurs PUT

## Excompteurs DELETE (object)

- ReferenceExterne: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).

## Excompteurs Invimmo DELETE (object)

- ReferenceInvimmo: `1526` (required, number) - Référence unique Invimmo
- Include Excompteurs DELETE

## Index (object)

- ReferenceExterne: `4568` (required, string) - Référence externe de l'Index (Max 255 caractères).
- ReferenceExterneCompteur: `001.230E` (required, string) - Référence externe du Compteur (Max 255 caractères).
- Releve: `1235` (required, number) - relevé de l'index (Max 10).
- DateReleve: `2017-02-14` (string) - Date de relevé de l'index (YYYY-MM-DD).
- Incident: `true` (boolean) - Relevé suite à incident (changement de compteur / fuite / etc.) true/false.
- Commentaire: `Index estimatif` (string) - Commentaire (Max 500 caractères).

## Index POST (object)

- Include Index

## Index PUT (object)

- Include Index

## Index Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Index PUT

## Index DELETE (object)

- ReferenceExterne: `4568` (required, string) - Référence externe de l'Index (Max 255 caractères).

## Index Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Index DELETE

## Baremes (object)

- ReferenceExterne: `PLOMB1` (required, string) - Référence externe du Barème (Max 255 caractères).
- Libelle: `Plomberie` (required, string) - Libellé du barème (Max 200 caractères).
- Code: `PLOMB` (string) - Code du barème (Max 255 caractères).

## Baremes Invimmo GET (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baremes

## Baremes POST (object)

- Include Baremes

## Baremes Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baremes POST

## Baremes PUT (object)

- ReferenceExterne: `PLOMB1` (required, string) - Référence externe du Barème (Max 255 caractères).
- Libelle: `001.230E` (string) - Libellé du barème (Max 200 caractères).

## Baremes Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include Baremes PUT

## Baremes DELETE (object)

- ReferenceExterne: `PLOMB1` (required, string) - Référence externe du Barème (Max 255 caractères).

## Baremes Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include Baremes DELETE

## LigneBaremes (object)

- ReferenceExterne: `7895` (required, string) - Référence externe de la ligne de Barème (Max 255 caractères).
- IdTypeEquipement: `45` (required, number) - L'identifiant du type d'équipement venant du paramètrage d'invimmo (Integer 10).
- Forfait: `450` (required, number) - Montant forfaitaire 0 = Non, 1 = Oui (Integer 1).
- Designation: `Evier Inox` (required, string) - Désignation de la ligne de barème (Max 255 caractères).
- Code: `Evier Inox` (string) - Code de le ligne de Barème (Max 500 caractères).
- Franchise: `500` (number) - Franchise appliqué sur le ligne de Barème (Interger 4).
- VetusteResiduelle: `500` (number) - Franchise appliqué sur le ligne de Barème (double, 12.2).
- Devis: `300` (number) - Montant Devisé de ligne de Barème (integer, 3).
- Unite: `Evier Inox` (string) - Unité de la ligne de Barème (Max 5 caractères).
- PrixHt: `500` (number) - Prix Hors Taxe de ligne de Barème (double, 12.2).
- PrixTtc: `500` (number) - Prix toutes Taxes comprises de ligne de Barème (double, 12.2).

## LigneBaremes GET (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- LibelleTypeEquipement: `Prise` (required, string) - Nom du type
- Include LigneBaremes

## LigneBaremes POST (object)

- Include LigneBaremes

## LigneBaremes Invimmo POST (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include LigneBaremes POST

## LigneBaremes PUT (object)

- Include LigneBaremes

## LigneBaremes Invimmo PUT (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.
- Include LigneBaremes PUT

## LigneBaremes DELETE (object)

- ReferenceExterne: `7895` (required, string) - Référence externe de la ligne de Barème (Max 255 caractères).

## LigneBaremes Invimmo DELETE (object)

- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo
- Include LigneBaremes DELETE


## Edls GET (object)

- Assurance (Assurances GET)
- Pieces (array[Pieces GET], fixed-type)
- Etages (array[Etages GET], fixed-type)
- Locataires (array[Locataires EDL GET],fixed-type)
- Compteurs (array[Compteurs EDL GET],fixed-type)
- Travaux (Travaux GET)
- Reponses (array[Reponses GET],fixed-type)

- ReferenceInvimmo: `149` (required, number) - Référence unique Invimmo.
- DateEdl: `2016-10-03 14:44:36` (required, string) - Date de l'état des lieux (YYYY-MM-DD HH:MM:SS).
- DateEntrant: `2016-10-03` (required, string) - Date d'entré du locataire (YYYY-MM-DD).
- Commentaire: `Logement très propre` (required, string) - Commentaire de l'état des lieux.
- CommentaireMotifDeDepart: `Cherche un logement centre ville`  (required, string) - Commentaire du motif de départ.
- ReferenceInvimmoLogement: `16548` (required, number) - Référence unique Invimmo.
- ReferenceExterneLogement: `001.001.001A` (required, string) - Référence externe du patrimoine (Max 255 caractères).
- referenceExterneBail: `80125` (required, string) - Référence externe du bail (Max 255 caractères).
- referenceInvimmoBail: `16548` (required, number) - Référence unique Invimmo.
- ReferenceInvimmoProprietaire: `16548` (required, number) - Référence unique Invimmo.
- ReferenceExterneProprietaire: `RDurand` (required, string) - Référence externe du Propriétaire (Max 255 caractères).
- TypeLogement: `T2` (required, string) - Type du logement.
- TypeEdl: `Etat des lieux entrant` (required, string) - Type de l'état des lieux.
- Etat: `Clos` (required, string) - Etat de l'état des lieux.
- MotifDepart: `Logement centre ville` (required, string) - Motif de départ du locataire.
- DestinationClient: `Centre ville de MELIN` (required, string) - Destination du locataire partant.
- LienEditionEdl: `11_edl__EditionEDL.pdf` - Le nom du pdf d'état des lieux afin de pouvoir récupérer le document
- LienEditionDegradation: `11_reparation__EditionReparation.pdf` - Le nom du pdf des réparations afin de pouvoir récupérer le document
- Agent: `Yann Bacquaert`  - Agent qui a effectué l'état des lieux
- ReparationSignee: `false` (boolean) - Indique si le documentaiton de réparation a été signée

## Reponses GET (object)

- Question: `EDL est terminé?` (string) - Libelle de la question (Max 2000 caractères).
- ReferenceInvimmoQuestion: `16548` (required, number) - Référence unique Invimmo.
- Reponse: `true` (boolean) - Réponse à la question (oui -> true, non > false).

## Assurances GET (object)

- ReferenceInvimmo: `465` (required, number) - Référence interne de l'assurance (Integer 10).
- DateDebut: `2016-01-31` (string) - Date de début (YYYY-MM-DD).
- DateFin: `2017-01-31` (string) - Date de fin (YYYY-MM-DD).
- NomCompagnie: `AXA` (required, string) - Nom de la compagnie d'assurance (Max 50 caractères).
- CodeContrat: `ZS45EMI4442` (required, string) - Code contrat d'assurance (Max 50 caractères).
- NumeroAssure: `Robert DUPOND` (required, string) - Numéro de l'assuré (Max 50 caractères).
- TelCompagnie: `351557010202731` (string) - Numéro de téléphone (Max 17 caractères).
- MailCompagnie: `toto@compagnie.fr` (string) - Email (Max 255 caractères).

## Pieces GET (object)

- equipements (array[Equipements GET],fixed-type)
- Surface (Surface GET)

- ReferenceInvimmo: `465` (required, number) - Référence interne de la Pièce (Integer 10).
- ReferenceExterne: `CUI123` (required, string) - Référence externe de la pièce (Max 255 caractères).
- Nom: `SALON` (required, string) - Nom de la pièce (Max 200 caractères).
- Etat: `HS` (string) - Etat de la pièce (type état) (Max 100 caractères).
- Ordre: `10` (number) - longueur de la pièce (number(3)).

## Etages GET (object)

- Pieces (array[Pieces GET],fixed-type)

- ReferenceInvimmo: `465` (required, number) - Référence interne.
- ReferenceExterne: `CUI123` (required, string) - Référence externe
- Code: `RDC` (optional, string) - Code (Max 50 caractères).
- Type: `Rez-de-chaussée` (required, string) - Type.
- InfoComplementaire: `principal` (string) - Information complementaire


## Surface GET (object)

- Surface: `110.67` (number) - surface de la pièce (Double 10.2).
- Hauteur: `2.5` (number) - hauteur de la pièce (Double 10.2).
- Largeur: `10.52` (number) - largeur de la pièce (Double 10.2).
- Longueur: `10.52` (number) - longueur de la pièce (Double 10.2).
- ReferenceInvimmo: `16548` (required, number) - Référence unique Invimmo.

## Equipements GET (object)

- ReferenceInvimmo: `45` (required, number) - Référence interne de l'équipement (Integer 10).
- ReferenceExterne: `EDH123` (required, string) - Référence externe de l'équipement  (Max 255 caractères).
- Nom: `Evier Inox` (required, string) - Désignation de l'équipement (Max 200 caractères).
- DatePose: `2017-02-14` (string) - Date de pose de l'équipement (YYYY-MM-DD).
- Etat: `Bon` (required, string) - Etat de l'équipement (Max 100 caractères).
- Commentaire: `Evier Inox double` (required, string) - Désignation de l'équipement (Max 2000 caractères).
- Ordre: `10` (number) - longueur de  l'équipement (number(3)).

## Procuration GET (object)

- Nom: `Dupont` (string) - Nom de la personne ayant procuration (Max 50 caractères).
- Prenom: `Dupont` (string) - Prenom de la personne ayant procuration (Max 50 caractères).
- Adresse: `rue de lille` (string) - Adresse de la personne ayant procuration (Max 100 caractères).
- ComplementAdresse: `Appt 2` (string) - Adresse de la personne ayant procuration (Max 100 caractères).
- CodePostal: `59000` (string) - Code postal de la personne ayant procuration (Max 10 caractères).
- Ville: `Lille` (string) - Ville de la personne ayant procuration (Max 100 caractères).
- Pays: `France` (string) - Pays de la personne ayant procuration (Max 50 caractères).
- Telephone: `351557010202731` (string) - Numéro de téléphone (Max 20 caractères).
- Email: `toto@gmail.com` (string) - Email (Max 255 caractères).

## FutureAdresse GET (object)

- Adresse: `rue de lille` (string) - Adresse de la future adresse (Max 100 caractères).
- ComplementAdresse: `Appt 2` (string) - Adresse de la future adresse (Max 100 caractères).
- CodePostal: `59000` (string) - Code postal de la future adresse (Max 10 caractères).
- Ville: `Lille` (string) - Ville de la future adresse (Max 100 caractères).
- Pays: `France` (string) - Pays de la future adresse (Max 50 caractères).
- TelephonePortable: `351557010202731` (string) - Numéro de téléphone portable(Max 20 caractères).
- TelephoneFixe: `351557010202731` (string) - Numéro de téléphone fixe (Max 20 caractères).
- Email: `toto@gmail.com` (string) - Email (Max 255 caractères).
- ReferenceInvimmoLocataire: `16548` (number) - Référence unique Invimmo du locataire.
- ReferenceExterneLocataire: `RDUPOND` (string) - Référence externe du locataire (Max 255 caractères).

## Index GET (object)

- ReferenceInvimmo: `465` (required, number) - Référence interne de l'index (Integer 10).
- ReferenceExterne: `001.230E` (string) - Référence externe de l'index (Max 255 caractères).
- DateReleve: `2017-02-14` (string) - Date de relevé de l'index (YYYY-MM-DD).
- Incident: `true` (boolean) - Relevé suite à incident (changement de compteur / fuite / etc.) true/false.
- Releve: `0` (number) - Relevé (Integer 1).
- ReferenceInvimmoCompteur: `44589` (number) - ID du compteur(Integer 10).
- ReferenceInvimmoCompteur: `001.230E` (string) - Référence externe du compteur (Max 255 caractères).
- ReferenceInvimmoBail: `44589` (number) - ID du bail (Integer 10).
- ReferenceExterneBail: `001.230E` (string) - Référence externe du bail (Max 255 caractères).
- Type: `Début` (string) - Type de relevé (Max 20 caractères).
- Commentaire: `Pas de commentaire` (string) - Commentaire sur l'index (Max 500 caractères).

## Travaux GET (object)

- CoutTotalDegradations: `500.45` (number) - Cout total des dégradations (double, 12.2).
- PourcentageRemise: `500.45` (number) - Pourcentage de la remise (double, 12.2).
- MontantApresRemise: `500.45` (number) - Cout total des dégradations après remise (double, 12.2).
- MontantRameneA: `500.45` (number) - Cout total des dégradations ramené au montant de... (double, 12.2).
- ConstatHuissier: `O` (string) - Y-a-t-il un constat d'huissier? O/N.

- degradations (array[Degradations GET],fixed-type)

## Degradations GET (object)

- Designation: `Evier Inox` (required, string) - Désignation de la dégradation (Max 255 caractères).
- PrixUnitaire: `10.40` (number) - Prix unitaire (Double 10.2).
- Quantite: `2` (number) - Quantité (Double 10.2).
- CoutTotal: `18.30` (number) - Cout total (Double 10.2).
- Vetuste: `2.10` (number) - Vétusté (Double 10.2).
- Forfait: `true` (boolean) - Est au forfait true/false.
- AChargeDuBailleur: `true` (boolean) - Réparation à la charge du bailleur true/false.
- ReferenceInvimmoEquipement: `45` (required, number) - Référence interne de l'équipement (Integer 10).
- ReferenceExterneEquipement: `CON125` (string) - Référence externe du type d'équipement (Max 255 caractères).
- RubriqueAssocie: `Contremarche` (string) - Rubrique associée (type équipement) (Max 200 caractères).
- CodeBordereau: `Evier Inox` (string) - Code bordereau (Max 500 caractères).

## TypeUgs (object)

- Num: `1` (required, number) - Numero du type.
- Libelle: `T3` (required, string) - Libelle (Max 50 caractères).
- DureeIntervention: `60` (required, number) - Durée d'intervention en minutes.
- EstLogement: `true` (required, boolean) - Type concerne un logement edl.
- Actif: `true` (boolean) - Actif.
- ListeTypeUgTypePiece (array[TypePieces GET],fixed-type)
- ListeTypeUgTypeEtage (array[TypeEtages GET],fixed-type)

## TypeUgs GET (object)

- Include TypeUgs

## TypeUgs POST (object)

- Include TypeUgs

## TypeUgs PUT (object)

- Include TypeUgs

## TypeUgs DELETE (object)

- Num: `1` (required, number) - Numero du type.

## TypePieces (object)

- Num: `1` (required, number) - Numero du type.
- LibelleTypePiece: `Chambre` (required, string) - Libelle (Max 100 caractères).
- Interieur: `0` (required, number) - 0 intérieur, 1 extérieur, 2 les deux.
- Ordre: `0` (required, number) - Ordre du type piece.
- Code: `CHB` (required, string) - Code (Max 50 caractères).
- Actif: `true` (boolean) - Actif.
- ListeTypePieceTypeEquipement (array[TypeEquipements GET],fixed-type)

## TypePieces GET (object)

- Include TypePieces

## TypePieces POST (object)

- Include TypePieces

## TypePieces PUT (object)

- Include TypePieces

## TypePieces DELETE (object)

- Num: `1` (required, number) - Numero du type.

## TypeEquipements (object)

- Num: `1` (required, number) - Numero du type.
- LibelleTypeEquipement: `Prise` (required, string) - Libelle (Max 100 caractères).
- Ordre: `0` (required, number) - Ordre du type.
- Code: `CHB` (required, string) - Code (Max 50 caractères).
- Actif: `true` (boolean) - Actif.

## TypeEquipements GET (object)

- Include TypeEquipements

## TypeEquipements POST (object)

- Include TypeEquipements

## TypeEquipements PUT (object)

- Include TypeEquipements

## TypeEquipements DELETE (object)

- Num: `1` (required, number) - Numero du type.

## Prestataires (object)

- Num: `1` (required, number) - Numero du Prestataire.
- Code: `SERG` (required, string) - Code (Max 500 caractères).
- Libelle: `SERG` (required, string) - Libelle (Max 500 caractères).
- Email: `SERG` (required, string) - Email (Max 500 caractères).
- Adresse: `SERG` (required, string) - Adresse (Max 500 caractères).
- Cp: `SERG` (required, string) - Cp (Max 500 caractères).
- Ville: `SERG` (required, string) - Ville (Max 500 caractères).
- Actif: `true` (boolean) - Actif.

## Prestataires GET (object)

- Include Prestataires

## Prestataires POST (object)

- Include Prestataires

## Prestataires PUT (object)

- Include Prestataires

## Prestataires DELETE (object)

- Num: `1` (required, number) - Numero du Prestaire.


## TypeEdls (object)

- Num: `1` (required, number) - Numero du type.
- Libelle: `Edl entrant` (required, string) - Libelle.
- Code: `EDLE` (optional, string) - Code.
- LibelleEdition: `Edl entrant` (required, string) - Label affiche dans l'edition.
- Actif: `true` (boolean) - Actif.
- ValeurJuridique: `true` (boolean) - Utilise la signature a valeur probante.
- Synchro: `true` (boolean) - Type de tache synchronise sur la tablette.
- EstLogement: `true` (boolean) - Concerne des logements.

## TypeEdls GET (object)

- Include TypeEdls

## TypeEtages (object)

- Num: `1` (required, number) - Numero du type.
- Libelle: `Rez-de-chaussée` (required, string) - Libelle (Max 100 caractères).
- Code: `RDC` (optional, string) - Code (Max 50 caractères).
- Ordre: `0` (required, number) - Ordre du type.
- Actif: `true` (boolean) - Actif.
- ListeTypeEtageTypePiece (array[TypePieces GET],fixed-type)
- ListeTypeEtageTypePiece (array[TypePieces GET], fixed-type)

## TypeEtages GET (object)

- Include TypeEtages

## TypeEtages POST (object)

- Include TypeEtages

## TypeEtages PUT (object)

- Include TypeEtages

## TypeEtages DELETE (object)

- Num: `1` (required, number) - Numero du type.